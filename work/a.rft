<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>a.el</title>
<link rel="stylesheet" type="text/css" href="highlight.css">
</head>
<body class="hl">
<pre class="hl"><span class="hl slc">;; vim:ft=elisp:syntax=lisp</span>
<span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">&apos;</span>cl-lib<span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">setf</span> x <span class="hl num">0</span> total <span class="hl num">0</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">catch</span> <span class="hl opt">&apos;</span>break
  <span class="hl opt">(</span><span class="hl kwa">while</span> t
    <span class="hl opt">(</span><span class="hl kwa">cl-incf</span> total x<span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&gt; (</span><span class="hl kwa">cl-incf</span> x<span class="hl opt">)</span> <span class="hl num">10</span><span class="hl opt">)</span>
        <span class="hl opt">(</span><span class="hl kwa">throw</span> <span class="hl opt">&apos;</span>break total<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">()</span>
  <span class="hl opt">(</span><span class="hl kwa">setf</span> num <span class="hl num">0</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(&lt;</span> num <span class="hl num">4</span><span class="hl opt">)</span>
    <span class="hl opt">(</span><span class="hl kwa">princ</span> <span class="hl opt">(</span><span class="hl kwa">format</span> <span class="hl str">&quot;Iteration %d.</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> num<span class="hl opt">))</span>
    <span class="hl opt">(</span><span class="hl kwa">setf</span> num <span class="hl opt">(</span><span class="hl kwa">1</span><span class="hl opt">+</span> num<span class="hl opt">))))</span>

<span class="hl opt">(</span><span class="hl kwa">while</span> <span class="hl opt">(</span><span class="hl kwa">progn</span>
         <span class="hl opt">(</span><span class="hl kwa">forward-line</span> <span class="hl num">1</span><span class="hl opt">)</span>
         <span class="hl opt">(</span><span class="hl kwa">print</span> <span class="hl opt">(</span><span class="hl kwa">point</span><span class="hl opt">))</span>
         <span class="hl opt">(</span><span class="hl kwa">not</span> <span class="hl opt">(</span><span class="hl kwa">looking-at</span> <span class="hl str">&quot;$&quot;</span><span class="hl opt">))))</span>
<span class="hl opt">(</span><span class="hl kwa">find-file</span> <span class="hl str">&quot;a.el&quot;</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">setf</span> a  <span class="hl opt">(</span><span class="hl kwa">buffer-string</span><span class="hl opt">)</span> b <span class="hl num">1</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">substring</span> a <span class="hl num">0</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">describe-function</span> <span class="hl opt">&apos;</span>describe-function<span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">type-of</span> <span class="hl opt">[</span><span class="hl num">1 2 3</span><span class="hl opt">])</span>
<span class="hl opt">(</span><span class="hl kwa">defmacro</span> square-sum <span class="hl opt">(</span><span class="hl kwa">x</span> y<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">sum</span> <span class="hl opt">(</span><span class="hl kwa">gensym</span><span class="hl opt">)))</span>
    <span class="hl opt">`(</span><span class="hl kwa">let</span> <span class="hl opt">((,</span>sum <span class="hl opt">(+ ,</span>x <span class="hl opt">,</span>y<span class="hl opt">)))</span>
       <span class="hl opt">(* ,</span>sum <span class="hl opt">,</span>sum<span class="hl opt">))))</span>
<span class="hl opt">(</span><span class="hl kwa">macroexpand</span> <span class="hl opt">&apos;(</span><span class="hl kwa">square-sum</span> <span class="hl num">3 4</span><span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">setf</span> op <span class="hl opt">&apos;+)</span>
<span class="hl opt">(</span><span class="hl kwa">eval</span> <span class="hl opt">`(,</span>op <span class="hl num">1 2</span><span class="hl opt">))</span>


<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">trim</span> <span class="hl opt">(</span><span class="hl kwa">s</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">s</span><span class="hl opt">* (</span><span class="hl kwa">replace-regexp-in-string</span> <span class="hl str">&quot;[</span> <span class="hl esc">\t</span><span class="hl str">]*$&quot;</span> <span class="hl str">&quot;&quot;</span> s<span class="hl opt">)))</span>
    <span class="hl opt">(</span><span class="hl kwa">replace-regexp-in-string</span> <span class="hl str">&quot;^[</span> <span class="hl esc">\t</span><span class="hl str">]*&quot;</span> <span class="hl str">&quot;&quot;</span> s<span class="hl opt">*)))</span>

<span class="hl opt">(</span><span class="hl kwa">trim</span> <span class="hl str">&quot; I am old &quot;</span><span class="hl opt">)</span>
<span class="hl str">&quot; I am old &quot;</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">take</span> <span class="hl opt">(</span><span class="hl kwa">n</span> l<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">cond</span>
    <span class="hl opt">((&lt;</span> n <span class="hl num">0</span><span class="hl opt">) ())</span>
    <span class="hl opt">((=</span> n <span class="hl num">0</span><span class="hl opt">) ())</span>
    <span class="hl opt">((</span><span class="hl kwa">null</span> l<span class="hl opt">) ())</span>
    <span class="hl opt">(</span><span class="hl kwa">t</span> <span class="hl opt">(</span><span class="hl kwa">cons</span> <span class="hl opt">(</span><span class="hl kwa">car</span> l<span class="hl opt">) (</span><span class="hl kwa">take</span> <span class="hl opt">(</span><span class="hl kwa">-</span> n <span class="hl num">1</span><span class="hl opt">) (</span><span class="hl kwa">cdr</span> l<span class="hl opt">))))))</span>

<span class="hl opt">(</span><span class="hl kwa">take</span> <span class="hl num">3</span> <span class="hl opt">&apos;(</span><span class="hl kwa">1</span> <span class="hl num">2 3 4 5 6</span><span class="hl opt">))</span>  
<span class="hl opt">(</span><span class="hl kwa">take</span> <span class="hl num">33</span> <span class="hl opt">&apos;(</span><span class="hl kwa">1</span> <span class="hl num">2 3</span><span class="hl opt">))</span>

<span class="hl opt">(</span><span class="hl kwa">require</span> <span class="hl opt">&apos;</span>cl<span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">x</span> <span class="hl num">3</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">get-x</span> <span class="hl opt">()</span> x<span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">get-x</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">let</span> <span class="hl opt">((</span><span class="hl kwa">x</span> <span class="hl num">4</span><span class="hl opt">)) (</span><span class="hl kwa">get-x</span><span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">lexical-let</span> <span class="hl opt">((</span><span class="hl kwa">x</span> <span class="hl num">3</span><span class="hl opt">))</span>
  <span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">getx</span> <span class="hl opt">()</span> x<span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">getx</span><span class="hl opt">)</span>



<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">square</span> <span class="hl opt">(</span><span class="hl kwa">x</span><span class="hl opt">) (*</span> x x<span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">five</span> <span class="hl opt">(</span><span class="hl kwa">x</span> y<span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">sqrt</span> <span class="hl opt">(+ (</span><span class="hl kwa">square</span> x<span class="hl opt">) (</span><span class="hl kwa">square</span> y<span class="hl opt">))))</span>
<span class="hl opt">(</span><span class="hl kwa">five</span> <span class="hl num">3 4</span><span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">foo</span> <span class="hl opt">()</span> <span class="hl num">1</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">bar</span><span class="hl opt">() (</span><span class="hl kwa">foo</span><span class="hl opt">))</span>
<span class="hl opt">(</span><span class="hl kwa">bar</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">foo</span> <span class="hl opt">()</span> <span class="hl num">2</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">bar</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">kill-emacs</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">documentation</span> <span class="hl opt">&apos;</span>kill-emacs<span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">symbol-function</span> <span class="hl opt">&apos;</span>kill-emacs<span class="hl opt">)</span>

<span class="hl opt">(</span><span class="hl kwa">defun</span> <span class="hl kwb">fact</span> <span class="hl opt">(</span><span class="hl kwa">n</span><span class="hl opt">)</span>
  <span class="hl opt">(</span><span class="hl kwa">if</span> <span class="hl opt">(&lt;</span> n <span class="hl num">2</span><span class="hl opt">)</span>
      <span class="hl num">1</span>
      <span class="hl opt">(*</span> n <span class="hl opt">(</span><span class="hl kwa">fact</span> <span class="hl opt">(</span><span class="hl kwa">-</span> n <span class="hl num">1</span><span class="hl opt">)))))</span>
<span class="hl opt">(</span><span class="hl kwa">fact</span> <span class="hl num">33</span><span class="hl opt">)</span>
<span class="hl opt">(</span><span class="hl kwa">fact</span> <span class="hl num">10</span><span class="hl opt">)</span>
</pre>
</body>
</html>
<!--HTML generated by highlight 3.49, http://www.andre-simon.de/-->
