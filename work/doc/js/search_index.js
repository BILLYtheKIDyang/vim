var search_data = {"index":{"searchIndex":["object","stack","fib()","new()","pop()","push()","'","24.pl","4748.test","7444.test","9.39.pl","a.java","advancedperl.pl","arraydemo.java","devinitive.js","effectiveperl.pl","emergencyelisp","livelessons.pl","livelessons.py","perl.vim","scheme","a.clj","a.cs","a.hs","a.html","a.js","a.lisp","a.pl","a.ps1","a.py","a.red","a.scala","a.sml","a.vbs","a.vim","b.js","b.p6","b.pl","b.py","bigpy-dir.py","c.js","c.pl","chinese.red","client.pl","closureobject","connect.py","connect2.py","connect3.py","cron.pl","cronlog","crontab","d.pl","download.py","fact.py","fork.pl","gopherclient.py","gopherclient3.py","gopherlibclient.py","hangman.pl","lgetr.pl","markov.pl","mydata","perlessential.pl","python-mode.el","red.red","repl.vbs","server.pl","server.py","socketerrors.py","t.py","tags.vim","urlclient.py","vbs-repl.el","vbsh.vbs","vbshell.vbs","vimtags.pl","visual-basic-mode.el"],"longSearchIndex":["object","stack","object#fib()","stack::new()","stack#pop()","stack#push()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Object","","Object.html","",""],["Stack","","Stack.html","",""],["fib","Object","Object.html#method-i-fib","(n)",""],["new","Stack","Stack.html#method-c-new","()",""],["pop","Stack","Stack.html#method-i-pop","()",""],["push","Stack","Stack.html#method-i-push","(value)",""],["'","","'.html","","<p>use Data::Dumper; print &#39;perl&gt; &#39;; while (defined($s=&lt;&gt;)) {\n\n<pre>if (length($s) &gt;= 2) {\n   ...</pre>\n"],["24.pl","","24_pl.html","","<p>$counter = 0; while ($counter &lt; 10) {\n\n<pre>print &quot;Still counting...$counter\\n&quot;;\n$counter++;</pre>\n<p>}\n"],["4748.test","","4748_test.html","","<p>test data\n"],["7444.test","","7444_test.html","","<p>test data\n"],["9.39.pl","","9_39_pl.html","","<p>while (&lt;DATA&gt;) {\n\n<pre class=\"ruby\">(<span class=\"ruby-identifier\">$first</span>, <span class=\"ruby-identifier\">$last</span>) = <span class=\"ruby-regexp\">/(\\w+) (\\w+)/</span>;\n<span class=\"ruby-identifier\">print</span> <span class=\"ruby-string\">&quot;$last, $first\\n&quot;</span>;\n</pre>\n<p>} __DATA__ Steve Belnheim …\n"],["A.java","","A_java.html","","<p>public class A {\n\n<pre>int fact(int n) {\n   if (n &lt; 2)\n      return 1;\n   else\n      return n * fact(n - 1); ...</pre>\n"],["AdvancedPerl.pl","","AdvancedPerl_pl.html","","<p># 4-2 use Tk;\n<p>sub CreateButton {\n\n<pre>my ($parent, $title) = @_;\nmy ($b);\n$callback_proc = sub {\n   print &quot;Button ...</pre>\n"],["ArrayDemo.java","","ArrayDemo_java.html","","<p>void main() {\n\n<pre>int data[] = new int [3];\nSystem.out.println(data.length);\ndata[0] = 10;\ndata[1] = 20;\ndata[2] ...</pre>\n"],["Devinitive.js","","Devinitive_js.html","","<p>// 6.1.1 对象直接量 var empty = {};                          // 没有任何属性的对象 var point = {x: 0, y: 0};       …\n"],["EffectivePerl.pl","","EffectivePerl_pl.html","","<p>if (0) {\n\n<pre>$scalar; # 单个值\n$array[3]; # 数组的元素\n$hash{&#39;key&#39;}; # 哈希表的元素\n\n@array; # 数组\n@array[0,2,6]; # 数组的切片 ...</pre>\n"],["EmergencyElisp","","EmergencyElisp_txt.html","","<p>Emergency Elisp vim:tw=78:nosta:noet:ts=8:sts=0:ft=help:noet:fen:fdm=marker:\n\n<pre>Quick Start*</pre>\n<p>To set a variable …\n"],["LiveLessons.pl","","LiveLessons_pl.html","","<p>@continents = (“North America”, “South America”, “Europe”, “Africa”, …\n"],["LiveLessons.py","","LiveLessons_py.html","","<p>grades = [85, 93, 45, 89, 85] sum(grades) / len(grades) import statistics statistics.mean(grades) statistics.median …\n"],["PERL.vim","","PERL_vim.html","","<p>setlocal omnifunc=PERL_complete function! PERL_complete(findstart, base) abort\n\n<pre>&quot; This function is called ...</pre>\n"],["Scheme","","Scheme_txt.html","","<p>Preface\n<p>Scheme was introduced in 1975 by Gerald J. Sussman and Guy L. Steele Jr. [28,29], and was the …\n"],["a.clj","","a_clj.html","","<p>(defn fact [n]\n\n<pre>(if (&lt; n 2)\n  1N\n  (* n (fact (- n 1)))))</pre>\n<p>(fact 33) (fact 123) (+ 1 1) (def board &#39; …\n"],["a.cs","","a_cs.html","","<p>Console.WriteLine(“333”);\n"],["a.hs","","a_hs.html","","<p>fact 0 =1 fact n = n * fact(n - 1)\n<p>{- fact 10 fact 123 -}\n"],["a.html","","a_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=“en”&gt; &lt;head&gt;\n\n<pre>&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;&lt;/title&gt;</pre>\n"],["a.js","","a_js.html","","<p>function doSomething(a) {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">b</span> = <span class=\"ruby-identifier\">a</span> <span class=\"ruby-operator\">+</span> <span class=\"ruby-identifier\">doSomethingElse</span>(<span class=\"ruby-identifier\">a</span> <span class=\"ruby-operator\">*</span> <span class=\"ruby-value\">2</span>);\n<span class=\"ruby-identifier\">console</span>.<span class=\"ruby-identifier\">log</span>(<span class=\"ruby-identifier\">b</span> <span class=\"ruby-operator\">*</span> <span class=\"ruby-value\">3</span>);\n</pre>\n<p>}\n"],["a.lisp","","a_lisp.html","","<p>; vim: ft=clisp syntax=lisp (defun fact (n)\n\n<pre>(if (&lt; n 2)\n 1\n (* n (fact (- n 1)))))</pre>\n<p>(fact 122)\n"],["a.pl","","a_pl.html","","<p>use Tk; my $mw = MainWindow-&gt;new; $mw-&gt;Label( -text =&gt; “Hello World!” )-&gt;pack(); …\n"],["a.ps1","","a_ps1.html","","<p>function fact($n) {\n\n<pre>if ($n -le 2) {\n   return 1\n} else {\n   return ($n * (fact($n - 1)))\n}</pre>\n<p>} fact(10)\n"],["a.py","","a_py.html","","<p>import math from matplotlib import pyplot ws = list(range(-201, 201, 1)) xs = list(map(lambda x: math.pi …\n"],["a.red","","a_red.html","","<p>Red [] i: 1 while [i &lt; 10] [\n\n<pre>print i\ni: i + 1</pre>\n<p>]\n"],["a.scala","","a_scala.html","",""],["a.sml","","a_sml.html","","<p>val x = 3; val y = x + 1;\n<p>fun fact n = \n\n<pre>if n = 0 then 1\nelse n * fact(n - 1) ;\n\nlet val x = 3\n  fun  f ...</pre>\n"],["a.vbs","","a_vbs.html","","<p>function fact(n)\n\n<pre>if n &lt; 2 then\n   fact = 1\nelse\n   fact = n * fact(n - 1)\nend if</pre>\n<p>end function\n"],["a.vim","","a_vim.html","","<p>“a\n<p>“\n"],["b.js","","b_js.html","","<p>// 6.1.1 对象直接量 var empty = {};                          // 没有任何属性的对象 var point = {x: 0, y: 0};       …\n"],["b.p6","","b_p6.html","","<p>my $scalar = 6; my @array = 1, 2, 3; say “Perl $scalar”; say “An @array[]”; say “@ …\n"],["b.pl","","b_pl.html","","<p>my @a = (1,2,3); @b = @a; undef @b; [@b]; $b = 100; push @b, 1; [@a, @b];\n<p>$^X; _; $ARGV; @ARGV; DATA; …\n"],["b.py","","b_py.html","","<p>def fact(n):\n\n<pre>return 1 if n &lt; 2 else n * fact(n - 1)</pre>\n<p>fact(5)\n"],["bigpy-dir.py","","bigpy-dir_py.html","","<p>import os, glob, sys\n<p>dirname = &#39;/home/a/.vim/work&#39; if len(sys.argv) == 1 else sys.argv\n<p>allsizes …\n"],["c.js","","c_js.html","","<p>var res1 = []; res1;\n"],["c.pl","","c_pl.html","","<p>use feature “say”; $r = [1,2,3]; say ref($r); $r  = {1,2,3,4}; say ref($r); sub fact {\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my</span> (<span class=\"ruby-identifier\">$n</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["chinese.red","","chinese_red.html","","<p>HEADER IMAGE\n<p>Home : Getting Started Getting Started With Red By Nick Antonaccio Updated 4-1-2016 Contents: …\n"],["client.pl","","client_pl.html","","<p># Filename: client.pl use strict; use IO::Socket;\n<p>my $sock = new IO::Socket::INET(\n\n<pre>PeerAddr =&gt; &#39;localhost&#39;, ...</pre>\n"],["closureobject","","closureobject_txt.html","","<p>Guy Steele wrote: &gt; Mike Newhall wrote: &gt; At 08:23 PM 2003.06.03 -0400, Anton van Straaten wrote: …\n"],["connect.py","","connect_py.html","","<p>import socket\n<p>print “Creating socket…” s = socket.socket(socket.AF_INET, socket.SOCK_STREAM …\n"],["connect2.py","","connect2_py.html","","<p>import socket\n<p>print “Creating socket…” s = socket.socket(socket.AF_INET, socket.SOCK_STREAM …\n"],["connect3.py","","connect3_py.html","","<p>import socket\n<p>print “Creating socket…” s = socket.socket(socket.AF_INET, socket.SOCK_STREAM …\n"],["cron.pl","","cron_pl.html","","<p>###################################################### # cron – by Scott McMahan # Usage: cron &lt;crontab …\n"],["cronlog","","cronlog_txt.html","","<p>cron [9/18/2019 13:47:33]: using default file crontab\n<p>cron [9/18/2019 13:54:27]: using default file crontab …\n"],["crontab","","crontab.html","","<p># min hour monthday month weekday command\n<p><p><p><p><p>ipython\n\n\n\n\n\n"],["d.pl","","d_pl.html","","<p>use strict; use Data::Dumper; Data::Dumper::Indent 0; use Tk; my $mw = MainWindow-&gt;new(); print Dumper($mw); …\n"],["download.py","","download_py.html","","<p>import urllib, sys\n<p>f = urllib.urlopen(sys.argv) f = urllib.urlopen(&#39;www.baidu.com&#39;) while 1:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">buf</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["fact.py","","fact_py.html","","<p>def fact(n):\n\n<pre>if n &lt; 2:\n    return 1\nelse:\n    return n * fact(n - 1)</pre>\n<p>print(fact(5))\n"],["fork.pl","","fork_pl.html","","<p>print “PID=$$n”;\n<p>my $child = fork(); die “can&#39;t fork: $!” unless defined $child; …\n"],["gopherclient.py","","gopherclient_py.html","","<p>import socket, sys\n<p>port = 70 host = sys.argv filename = sys.argv\n<p>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM …\n"],["gopherclient3.py","","gopherclient3_py.html","","<p>import socket, sys\n<p>port = 70 host = sys.argv filename = sys.argv\n<p>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM …\n"],["gopherlibclient.py","","gopherlibclient_py.html","","<p>import gopher, sys\n<p>host = sys.argv file = sys.argv\n<p>f = gopher.send_selector(file, host) for line in f.readlines …\n"],["hangman.pl","","hangman_pl.html","","<p>@words = qw(internet answers printer program, abc); $wrong = 0;\n<p>$choice = $words[rand @words]; $hangman …\n"],["lgetr.pl","","lgetr_pl.html","","<p>use IO::Socket;\n<p>$fh = new IO::Socket::INET(\n\n<pre>PeerAddr =&gt; &#39;www.baidu.com&#39;,\nPeerPort =&gt; 80,\n#Proto    =&gt; &#39;http&#39;</pre>\n"],["markov.pl","","markov_pl.html","","<p># markov.pl: markov chain algorithm for 2-word prefixes\n<p>$MAXGEN = 10000; $NONWORD = “n”; $w1 …\n"],["mydata","","mydata.html","","<p>This is some text that I want to save for later.\n"],["perlEssential.pl","","perlEssential_pl.html","","<p>( 1, 2, 3); # 列表，列表只返回最后一个元素的值 [1,2,3];    # 匿名数组 # 用列表来初始化数组 @array = (1,2,3); $array; # 用匿名数组 @array …\n"],["python-mode.el","","python-mode_el.html","","<p>;; Includes a minor mode for handling a Python/IPython shell, ;; and can take advantage of Pymacs when …\n"],["red.red","","red_red.html","","<p>HEADER IMAGE\n<p>Home : Getting Started Getting Started With Red By Nick Antonaccio Updated 4-1-2016 Contents: …\n"],["repl.vbs","","repl_vbs.html","","<p>Option Explicit\n<p>Dim FileSystem WScript.Quit Main\n<p>Function Main()\n"],["server.pl","","server_pl.html","","<p># Filename: server.pl use strict; use IO::Socket;\n<p>my $sock = new IO::Socket::INET(\n\n<pre>LocalHost =&gt; &#39;localhost&#39;, ...</pre>\n"],["server.py","","server_py.html","","<p>import socket\n<p>host = &#39;&#39; port = 51423\n<p>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.setsockopt …\n"],["socketerrors.py","","socketerrors_py.html","","<p>import socket, sys\n<p>host = sys.argv textport = sys.argv filename = sys.argv\n<p>try:\n"],["t.py","","t_py.html","","<p>import turtle\n<p>t = turtle.Pen() t.forward(50) t.left(90) t.forward(50) t.left(90) t.forward(50) t.left …\n"],["tags.vim","","tags_vim.html","","<p>function! abs()\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">echo</span> <span class=\"ruby-string\">&#39;Yes&#39;</span>\n</pre>\n<p>endfunction function! acos()\n"],["urlclient.py","","urlclient_py.html","","<p>import urllib, sys\n<p>host = sys.argv file = sys.argv\n<p>f = urllib.urlopen(&#39;%s%s&#39; % (host, file)) for …\n"],["vbs-repl.el","","vbs-repl_el.html","","<p>;;; vbs-repl.el — Support for VBScript programming in Emacs\n<p>;;; Copyright: (C) 2009 Charles Sebold ;; …\n"],["vbsh.vbs","","vbsh_vbs.html","","<p>If LCase(Right(WScript.FullName, 11)) &lt;&gt; “cscript.exe” Then\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">CreateObject</span>(<span class=\"ruby-string\">&quot;WScript.Shell&quot;</span>).<span class=\"ruby-constant\">Run</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["vbshell.vbs","","vbshell_vbs.html","","<p>Option Explicit\n<p>Dim FileSystem WScript.Quit Main\n<p>Function Main()\n"],["vimtags.pl","","vimtags_pl.html","","<p>@words = qw( abs acos add and append appendbufline argc argidx arglistid argv argv assert_beeps assert_equal …\n"],["visual-basic-mode.el","","visual-basic-mode_el.html","","<p>;;; visual-basic-mode.el — A mode for editing Visual Basic programs.\n<p>;; This is free software. ;; Modified …\n"]]}}