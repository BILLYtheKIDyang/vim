!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
#make-accessors	/tmp/tags.scm	/^(define #make-accessors 0)$/;"	f	language:Scheme
$primitive	/tmp/tags.scm	/^(define $primitive 0)$/;"	f	language:Scheme
$system	/tmp/tags.scm	/^(define $system 0)$/;"	f	language:Scheme
&assertion	/tmp/tags.scm	/^(define &assertion 0)$/;"	f	language:Scheme
&condition	/tmp/tags.scm	/^(define &condition 0)$/;"	f	language:Scheme
&continuation	/tmp/tags.scm	/^(define &continuation 0)$/;"	f	language:Scheme
&error	/tmp/tags.scm	/^(define &error 0)$/;"	f	language:Scheme
&format	/tmp/tags.scm	/^(define &format 0)$/;"	f	language:Scheme
&i/o	/tmp/tags.scm	/^(define &i\/o 0)$/;"	f	language:Scheme
&i/o-decoding	/tmp/tags.scm	/^(define &i\/o-decoding 0)$/;"	f	language:Scheme
&i/o-encoding	/tmp/tags.scm	/^(define &i\/o-encoding 0)$/;"	f	language:Scheme
&i/o-file-already-exists	/tmp/tags.scm	/^(define &i\/o-file-already-exists 0)$/;"	f	language:Scheme
&i/o-file-does-not-exist	/tmp/tags.scm	/^(define &i\/o-file-does-not-exist 0)$/;"	f	language:Scheme
&i/o-file-is-read-only	/tmp/tags.scm	/^(define &i\/o-file-is-read-only 0)$/;"	f	language:Scheme
&i/o-file-protection	/tmp/tags.scm	/^(define &i\/o-file-protection 0)$/;"	f	language:Scheme
&i/o-filename	/tmp/tags.scm	/^(define &i\/o-filename 0)$/;"	f	language:Scheme
&i/o-invalid-position	/tmp/tags.scm	/^(define &i\/o-invalid-position 0)$/;"	f	language:Scheme
&i/o-port	/tmp/tags.scm	/^(define &i\/o-port 0)$/;"	f	language:Scheme
&i/o-read	/tmp/tags.scm	/^(define &i\/o-read 0)$/;"	f	language:Scheme
&i/o-write	/tmp/tags.scm	/^(define &i\/o-write 0)$/;"	f	language:Scheme
&implementation-restriction	/tmp/tags.scm	/^(define &implementation-restriction 0)$/;"	f	language:Scheme
&irritants	/tmp/tags.scm	/^(define &irritants 0)$/;"	f	language:Scheme
&lexical	/tmp/tags.scm	/^(define &lexical 0)$/;"	f	language:Scheme
&message	/tmp/tags.scm	/^(define &message 0)$/;"	f	language:Scheme
&no-infinities	/tmp/tags.scm	/^(define &no-infinities 0)$/;"	f	language:Scheme
&no-nans	/tmp/tags.scm	/^(define &no-nans 0)$/;"	f	language:Scheme
&non-continuable	/tmp/tags.scm	/^(define &non-continuable 0)$/;"	f	language:Scheme
&serious	/tmp/tags.scm	/^(define &serious 0)$/;"	f	language:Scheme
&source	/tmp/tags.scm	/^(define &source 0)$/;"	f	language:Scheme
&syntax	/tmp/tags.scm	/^(define &syntax 0)$/;"	f	language:Scheme
&undefined	/tmp/tags.scm	/^(define &undefined 0)$/;"	f	language:Scheme
&violation	/tmp/tags.scm	/^(define &violation 0)$/;"	f	language:Scheme
&warning	/tmp/tags.scm	/^(define &warning 0)$/;"	f	language:Scheme
&who	/tmp/tags.scm	/^(define &who 0)$/;"	f	language:Scheme
*	/tmp/tags.scm	/^(define * 0)$/;"	f	language:Scheme
*eof*	/tmp/tags.scm	/^(define *eof* 0)$/;"	f	language:Scheme
*most-negative-fixnum*	/tmp/tags.scm	/^(define *most-negative-fixnum* 0)$/;"	f	language:Scheme
*most-negative-short-integer*	/tmp/tags.scm	/^(define *most-negative-short-integer* 0)$/;"	f	language:Scheme
*most-positive-fixnum*	/tmp/tags.scm	/^(define *most-positive-fixnum* 0)$/;"	f	language:Scheme
*most-positive-short-integer*	/tmp/tags.scm	/^(define *most-positive-short-integer* 0)$/;"	f	language:Scheme
+	/tmp/tags.scm	/^(define + 0)$/;"	f	language:Scheme
-	/tmp/tags.scm	/^(define - 0)$/;"	f	language:Scheme
-1+	/tmp/tags.scm	/^(define -1+ 0)$/;"	f	language:Scheme
...	/tmp/tags.scm	/^(define ... 0)$/;"	f	language:Scheme
/	/tmp/tags.scm	/^(define \/ 0)$/;"	f	language:Scheme
1+	/tmp/tags.scm	/^(define 1+ 0)$/;"	f	language:Scheme
1-	/tmp/tags.scm	/^(define 1- 0)$/;"	f	language:Scheme
<	/tmp/tags.scm	/^(define < 0)$/;"	f	language:Scheme
<=	/tmp/tags.scm	/^(define <= 0)$/;"	f	language:Scheme
<=?	/tmp/tags.scm	/^(define <=? 0)$/;"	f	language:Scheme
<?	/tmp/tags.scm	/^(define <? 0)$/;"	f	language:Scheme
=	/tmp/tags.scm	/^(define = 0)$/;"	f	language:Scheme
=>	/tmp/tags.scm	/^(define => 0)$/;"	f	language:Scheme
=?	/tmp/tags.scm	/^(define =? 0)$/;"	f	language:Scheme
>	/tmp/tags.scm	/^(define > 0)$/;"	f	language:Scheme
>=	/tmp/tags.scm	/^(define >= 0)$/;"	f	language:Scheme
>=?	/tmp/tags.scm	/^(define >=? 0)$/;"	f	language:Scheme
>?	/tmp/tags.scm	/^(define >? 0)$/;"	f	language:Scheme
_	/tmp/tags.scm	/^(define _ 0)$/;"	f	language:Scheme
abort	/tmp/tags.scm	/^(define abort 0)$/;"	f	language:Scheme
abort-handler	/tmp/tags.scm	/^(define abort-handler 0)$/;"	f	language:Scheme
abs	/tmp/tags.scm	/^(define abs 0)$/;"	f	language:Scheme
acos	/tmp/tags.scm	/^(define acos 0)$/;"	f	language:Scheme
acosh	/tmp/tags.scm	/^(define acosh 0)$/;"	f	language:Scheme
add-duration	/tmp/tags.scm	/^(define add-duration 0)$/;"	f	language:Scheme
add-duration!	/tmp/tags.scm	/^(define add-duration! 0)$/;"	f	language:Scheme
add-prefix	/tmp/tags.scm	/^(define add-prefix 0)$/;"	f	language:Scheme
add1	/tmp/tags.scm	/^(define add1 0)$/;"	f	language:Scheme
alias	/tmp/tags.scm	/^(define alias 0)$/;"	f	language:Scheme
and	/tmp/tags.scm	/^(define and 0)$/;"	f	language:Scheme
andmap	/tmp/tags.scm	/^(define andmap 0)$/;"	f	language:Scheme
angle	/tmp/tags.scm	/^(define angle 0)$/;"	f	language:Scheme
annotation-expression	/tmp/tags.scm	/^(define annotation-expression 0)$/;"	f	language:Scheme
annotation-option-set	/tmp/tags.scm	/^(define annotation-option-set 0)$/;"	f	language:Scheme
annotation-options	/tmp/tags.scm	/^(define annotation-options 0)$/;"	f	language:Scheme
annotation-source	/tmp/tags.scm	/^(define annotation-source 0)$/;"	f	language:Scheme
annotation-stripped	/tmp/tags.scm	/^(define annotation-stripped 0)$/;"	f	language:Scheme
annotation?	/tmp/tags.scm	/^(define annotation? 0)$/;"	f	language:Scheme
append	/tmp/tags.scm	/^(define append 0)$/;"	f	language:Scheme
append!	/tmp/tags.scm	/^(define append! 0)$/;"	f	language:Scheme
apply	/tmp/tags.scm	/^(define apply 0)$/;"	f	language:Scheme
apropos	/tmp/tags.scm	/^(define apropos 0)$/;"	f	language:Scheme
apropos-list	/tmp/tags.scm	/^(define apropos-list 0)$/;"	f	language:Scheme
ash	/tmp/tags.scm	/^(define ash 0)$/;"	f	language:Scheme
asin	/tmp/tags.scm	/^(define asin 0)$/;"	f	language:Scheme
asinh	/tmp/tags.scm	/^(define asinh 0)$/;"	f	language:Scheme
ass	/tmp/tags.scm	/^(define ass 0)$/;"	f	language:Scheme
assert	/tmp/tags.scm	/^(define assert 0)$/;"	f	language:Scheme
assertion-violation	/tmp/tags.scm	/^(define assertion-violation 0)$/;"	f	language:Scheme
assertion-violation?	/tmp/tags.scm	/^(define assertion-violation? 0)$/;"	f	language:Scheme
assertion-violationf	/tmp/tags.scm	/^(define assertion-violationf 0)$/;"	f	language:Scheme
assoc	/tmp/tags.scm	/^(define assoc 0)$/;"	f	language:Scheme
assp	/tmp/tags.scm	/^(define assp 0)$/;"	f	language:Scheme
assq	/tmp/tags.scm	/^(define assq 0)$/;"	f	language:Scheme
assv	/tmp/tags.scm	/^(define assv 0)$/;"	f	language:Scheme
atan	/tmp/tags.scm	/^(define atan 0)$/;"	f	language:Scheme
atanh	/tmp/tags.scm	/^(define atanh 0)$/;"	f	language:Scheme
atom?	/tmp/tags.scm	/^(define atom? 0)$/;"	f	language:Scheme
base-exception-handler	/tmp/tags.scm	/^(define base-exception-handler 0)$/;"	f	language:Scheme
begin	/tmp/tags.scm	/^(define begin 0)$/;"	f	language:Scheme
begin-for-syntax	/tmp/tags.scm	/^(define begin-for-syntax 0)$/;"	f	language:Scheme
begin0	/tmp/tags.scm	/^(define begin0 0)$/;"	f	language:Scheme
big-integer?	/tmp/tags.scm	/^(define big-integer? 0)$/;"	f	language:Scheme
bignum?	/tmp/tags.scm	/^(define bignum? 0)$/;"	f	language:Scheme
binary-port-input-buffer	/tmp/tags.scm	/^(define binary-port-input-buffer 0)$/;"	f	language:Scheme
binary-port-input-count	/tmp/tags.scm	/^(define binary-port-input-count 0)$/;"	f	language:Scheme
binary-port-input-index	/tmp/tags.scm	/^(define binary-port-input-index 0)$/;"	f	language:Scheme
binary-port-input-size	/tmp/tags.scm	/^(define binary-port-input-size 0)$/;"	f	language:Scheme
binary-port-output-buffer	/tmp/tags.scm	/^(define binary-port-output-buffer 0)$/;"	f	language:Scheme
binary-port-output-count	/tmp/tags.scm	/^(define binary-port-output-count 0)$/;"	f	language:Scheme
binary-port-output-index	/tmp/tags.scm	/^(define binary-port-output-index 0)$/;"	f	language:Scheme
binary-port-output-size	/tmp/tags.scm	/^(define binary-port-output-size 0)$/;"	f	language:Scheme
binary-port?	/tmp/tags.scm	/^(define binary-port? 0)$/;"	f	language:Scheme
bitwise-and	/tmp/tags.scm	/^(define bitwise-and 0)$/;"	f	language:Scheme
bitwise-arithmetic-shift	/tmp/tags.scm	/^(define bitwise-arithmetic-shift 0)$/;"	f	language:Scheme
bitwise-arithmetic-shift-left	/tmp/tags.scm	/^(define bitwise-arithmetic-shift-left 0)$/;"	f	language:Scheme
bitwise-arithmetic-shift-right	/tmp/tags.scm	/^(define bitwise-arithmetic-shift-right 0)$/;"	f	language:Scheme
bitwise-bit-count	/tmp/tags.scm	/^(define bitwise-bit-count 0)$/;"	f	language:Scheme
bitwise-bit-field	/tmp/tags.scm	/^(define bitwise-bit-field 0)$/;"	f	language:Scheme
bitwise-bit-set?	/tmp/tags.scm	/^(define bitwise-bit-set? 0)$/;"	f	language:Scheme
bitwise-copy-bit	/tmp/tags.scm	/^(define bitwise-copy-bit 0)$/;"	f	language:Scheme
bitwise-copy-bit-field	/tmp/tags.scm	/^(define bitwise-copy-bit-field 0)$/;"	f	language:Scheme
bitwise-first-bit-set	/tmp/tags.scm	/^(define bitwise-first-bit-set 0)$/;"	f	language:Scheme
bitwise-if	/tmp/tags.scm	/^(define bitwise-if 0)$/;"	f	language:Scheme
bitwise-ior	/tmp/tags.scm	/^(define bitwise-ior 0)$/;"	f	language:Scheme
bitwise-length	/tmp/tags.scm	/^(define bitwise-length 0)$/;"	f	language:Scheme
bitwise-not	/tmp/tags.scm	/^(define bitwise-not 0)$/;"	f	language:Scheme
bitwise-reverse-bit-field	/tmp/tags.scm	/^(define bitwise-reverse-bit-field 0)$/;"	f	language:Scheme
bitwise-rotate-bit-field	/tmp/tags.scm	/^(define bitwise-rotate-bit-field 0)$/;"	f	language:Scheme
bitwise-xor	/tmp/tags.scm	/^(define bitwise-xor 0)$/;"	f	language:Scheme
block-read	/tmp/tags.scm	/^(define block-read 0)$/;"	f	language:Scheme
block-write	/tmp/tags.scm	/^(define block-write 0)$/;"	f	language:Scheme
boolean=?	/tmp/tags.scm	/^(define boolean=? 0)$/;"	f	language:Scheme
boolean?	/tmp/tags.scm	/^(define boolean? 0)$/;"	f	language:Scheme
bound-identifier=?	/tmp/tags.scm	/^(define bound-identifier=? 0)$/;"	f	language:Scheme
bound?	/tmp/tags.scm	/^(define bound? 0)$/;"	f	language:Scheme
box	/tmp/tags.scm	/^(define box 0)$/;"	f	language:Scheme
box-cas!	/tmp/tags.scm	/^(define box-cas! 0)$/;"	f	language:Scheme
box-immutable	/tmp/tags.scm	/^(define box-immutable 0)$/;"	f	language:Scheme
box?	/tmp/tags.scm	/^(define box? 0)$/;"	f	language:Scheme
break	/tmp/tags.scm	/^(define break 0)$/;"	f	language:Scheme
break-handler	/tmp/tags.scm	/^(define break-handler 0)$/;"	f	language:Scheme
buffer-mode	/tmp/tags.scm	/^(define buffer-mode 0)$/;"	f	language:Scheme
buffer-mode?	/tmp/tags.scm	/^(define buffer-mode? 0)$/;"	f	language:Scheme
bwp-object?	/tmp/tags.scm	/^(define bwp-object? 0)$/;"	f	language:Scheme
bytes-allocated	/tmp/tags.scm	/^(define bytes-allocated 0)$/;"	f	language:Scheme
bytes-deallocated	/tmp/tags.scm	/^(define bytes-deallocated 0)$/;"	f	language:Scheme
bytevector	/tmp/tags.scm	/^(define bytevector 0)$/;"	f	language:Scheme
bytevector->immutable-bytevector	/tmp/tags.scm	/^(define bytevector->immutable-bytevector 0)$/;"	f	language:Scheme
bytevector->s8-list	/tmp/tags.scm	/^(define bytevector->s8-list 0)$/;"	f	language:Scheme
bytevector->sint-list	/tmp/tags.scm	/^(define bytevector->sint-list 0)$/;"	f	language:Scheme
bytevector->string	/tmp/tags.scm	/^(define bytevector->string 0)$/;"	f	language:Scheme
bytevector->u8-list	/tmp/tags.scm	/^(define bytevector->u8-list 0)$/;"	f	language:Scheme
bytevector->uint-list	/tmp/tags.scm	/^(define bytevector->uint-list 0)$/;"	f	language:Scheme
bytevector-compress	/tmp/tags.scm	/^(define bytevector-compress 0)$/;"	f	language:Scheme
bytevector-copy	/tmp/tags.scm	/^(define bytevector-copy 0)$/;"	f	language:Scheme
bytevector-copy!	/tmp/tags.scm	/^(define bytevector-copy! 0)$/;"	f	language:Scheme
bytevector-fill!	/tmp/tags.scm	/^(define bytevector-fill! 0)$/;"	f	language:Scheme
bytevector-ieee-double-native-ref	/tmp/tags.scm	/^(define bytevector-ieee-double-native-ref 0)$/;"	f	language:Scheme
bytevector-ieee-double-native-set!	/tmp/tags.scm	/^(define bytevector-ieee-double-native-set! 0)$/;"	f	language:Scheme
bytevector-ieee-double-ref	/tmp/tags.scm	/^(define bytevector-ieee-double-ref 0)$/;"	f	language:Scheme
bytevector-ieee-double-set!	/tmp/tags.scm	/^(define bytevector-ieee-double-set! 0)$/;"	f	language:Scheme
bytevector-ieee-single-native-ref	/tmp/tags.scm	/^(define bytevector-ieee-single-native-ref 0)$/;"	f	language:Scheme
bytevector-ieee-single-native-set!	/tmp/tags.scm	/^(define bytevector-ieee-single-native-set! 0)$/;"	f	language:Scheme
bytevector-ieee-single-ref	/tmp/tags.scm	/^(define bytevector-ieee-single-ref 0)$/;"	f	language:Scheme
bytevector-ieee-single-set!	/tmp/tags.scm	/^(define bytevector-ieee-single-set! 0)$/;"	f	language:Scheme
bytevector-length	/tmp/tags.scm	/^(define bytevector-length 0)$/;"	f	language:Scheme
bytevector-s16-native-ref	/tmp/tags.scm	/^(define bytevector-s16-native-ref 0)$/;"	f	language:Scheme
bytevector-s16-native-set!	/tmp/tags.scm	/^(define bytevector-s16-native-set! 0)$/;"	f	language:Scheme
bytevector-s16-ref	/tmp/tags.scm	/^(define bytevector-s16-ref 0)$/;"	f	language:Scheme
bytevector-s16-set!	/tmp/tags.scm	/^(define bytevector-s16-set! 0)$/;"	f	language:Scheme
bytevector-s24-ref	/tmp/tags.scm	/^(define bytevector-s24-ref 0)$/;"	f	language:Scheme
bytevector-s24-set!	/tmp/tags.scm	/^(define bytevector-s24-set! 0)$/;"	f	language:Scheme
bytevector-s32-native-ref	/tmp/tags.scm	/^(define bytevector-s32-native-ref 0)$/;"	f	language:Scheme
bytevector-s32-native-set!	/tmp/tags.scm	/^(define bytevector-s32-native-set! 0)$/;"	f	language:Scheme
bytevector-s32-ref	/tmp/tags.scm	/^(define bytevector-s32-ref 0)$/;"	f	language:Scheme
bytevector-s32-set!	/tmp/tags.scm	/^(define bytevector-s32-set! 0)$/;"	f	language:Scheme
bytevector-s40-ref	/tmp/tags.scm	/^(define bytevector-s40-ref 0)$/;"	f	language:Scheme
bytevector-s40-set!	/tmp/tags.scm	/^(define bytevector-s40-set! 0)$/;"	f	language:Scheme
bytevector-s48-ref	/tmp/tags.scm	/^(define bytevector-s48-ref 0)$/;"	f	language:Scheme
bytevector-s48-set!	/tmp/tags.scm	/^(define bytevector-s48-set! 0)$/;"	f	language:Scheme
bytevector-s56-ref	/tmp/tags.scm	/^(define bytevector-s56-ref 0)$/;"	f	language:Scheme
bytevector-s56-set!	/tmp/tags.scm	/^(define bytevector-s56-set! 0)$/;"	f	language:Scheme
bytevector-s64-native-ref	/tmp/tags.scm	/^(define bytevector-s64-native-ref 0)$/;"	f	language:Scheme
bytevector-s64-native-set!	/tmp/tags.scm	/^(define bytevector-s64-native-set! 0)$/;"	f	language:Scheme
bytevector-s64-ref	/tmp/tags.scm	/^(define bytevector-s64-ref 0)$/;"	f	language:Scheme
bytevector-s64-set!	/tmp/tags.scm	/^(define bytevector-s64-set! 0)$/;"	f	language:Scheme
bytevector-s8-ref	/tmp/tags.scm	/^(define bytevector-s8-ref 0)$/;"	f	language:Scheme
bytevector-s8-set!	/tmp/tags.scm	/^(define bytevector-s8-set! 0)$/;"	f	language:Scheme
bytevector-sint-ref	/tmp/tags.scm	/^(define bytevector-sint-ref 0)$/;"	f	language:Scheme
bytevector-sint-set!	/tmp/tags.scm	/^(define bytevector-sint-set! 0)$/;"	f	language:Scheme
bytevector-truncate!	/tmp/tags.scm	/^(define bytevector-truncate! 0)$/;"	f	language:Scheme
bytevector-u16-native-ref	/tmp/tags.scm	/^(define bytevector-u16-native-ref 0)$/;"	f	language:Scheme
bytevector-u16-native-set!	/tmp/tags.scm	/^(define bytevector-u16-native-set! 0)$/;"	f	language:Scheme
bytevector-u16-ref	/tmp/tags.scm	/^(define bytevector-u16-ref 0)$/;"	f	language:Scheme
bytevector-u16-set!	/tmp/tags.scm	/^(define bytevector-u16-set! 0)$/;"	f	language:Scheme
bytevector-u24-ref	/tmp/tags.scm	/^(define bytevector-u24-ref 0)$/;"	f	language:Scheme
bytevector-u24-set!	/tmp/tags.scm	/^(define bytevector-u24-set! 0)$/;"	f	language:Scheme
bytevector-u32-native-ref	/tmp/tags.scm	/^(define bytevector-u32-native-ref 0)$/;"	f	language:Scheme
bytevector-u32-native-set!	/tmp/tags.scm	/^(define bytevector-u32-native-set! 0)$/;"	f	language:Scheme
bytevector-u32-ref	/tmp/tags.scm	/^(define bytevector-u32-ref 0)$/;"	f	language:Scheme
bytevector-u32-set!	/tmp/tags.scm	/^(define bytevector-u32-set! 0)$/;"	f	language:Scheme
bytevector-u40-ref	/tmp/tags.scm	/^(define bytevector-u40-ref 0)$/;"	f	language:Scheme
bytevector-u40-set!	/tmp/tags.scm	/^(define bytevector-u40-set! 0)$/;"	f	language:Scheme
bytevector-u48-ref	/tmp/tags.scm	/^(define bytevector-u48-ref 0)$/;"	f	language:Scheme
bytevector-u48-set!	/tmp/tags.scm	/^(define bytevector-u48-set! 0)$/;"	f	language:Scheme
bytevector-u56-ref	/tmp/tags.scm	/^(define bytevector-u56-ref 0)$/;"	f	language:Scheme
bytevector-u56-set!	/tmp/tags.scm	/^(define bytevector-u56-set! 0)$/;"	f	language:Scheme
bytevector-u64-native-ref	/tmp/tags.scm	/^(define bytevector-u64-native-ref 0)$/;"	f	language:Scheme
bytevector-u64-native-set!	/tmp/tags.scm	/^(define bytevector-u64-native-set! 0)$/;"	f	language:Scheme
bytevector-u64-ref	/tmp/tags.scm	/^(define bytevector-u64-ref 0)$/;"	f	language:Scheme
bytevector-u64-set!	/tmp/tags.scm	/^(define bytevector-u64-set! 0)$/;"	f	language:Scheme
bytevector-u8-ref	/tmp/tags.scm	/^(define bytevector-u8-ref 0)$/;"	f	language:Scheme
bytevector-u8-set!	/tmp/tags.scm	/^(define bytevector-u8-set! 0)$/;"	f	language:Scheme
bytevector-uint-ref	/tmp/tags.scm	/^(define bytevector-uint-ref 0)$/;"	f	language:Scheme
bytevector-uint-set!	/tmp/tags.scm	/^(define bytevector-uint-set! 0)$/;"	f	language:Scheme
bytevector-uncompress	/tmp/tags.scm	/^(define bytevector-uncompress 0)$/;"	f	language:Scheme
bytevector=?	/tmp/tags.scm	/^(define bytevector=? 0)$/;"	f	language:Scheme
bytevector?	/tmp/tags.scm	/^(define bytevector? 0)$/;"	f	language:Scheme
caaaar	/tmp/tags.scm	/^(define caaaar 0)$/;"	f	language:Scheme
caaadr	/tmp/tags.scm	/^(define caaadr 0)$/;"	f	language:Scheme
caaar	/tmp/tags.scm	/^(define caaar 0)$/;"	f	language:Scheme
caadar	/tmp/tags.scm	/^(define caadar 0)$/;"	f	language:Scheme
caaddr	/tmp/tags.scm	/^(define caaddr 0)$/;"	f	language:Scheme
caadr	/tmp/tags.scm	/^(define caadr 0)$/;"	f	language:Scheme
caar	/tmp/tags.scm	/^(define caar 0)$/;"	f	language:Scheme
cadaar	/tmp/tags.scm	/^(define cadaar 0)$/;"	f	language:Scheme
cadadr	/tmp/tags.scm	/^(define cadadr 0)$/;"	f	language:Scheme
cadar	/tmp/tags.scm	/^(define cadar 0)$/;"	f	language:Scheme
caddar	/tmp/tags.scm	/^(define caddar 0)$/;"	f	language:Scheme
cadddr	/tmp/tags.scm	/^(define cadddr 0)$/;"	f	language:Scheme
caddr	/tmp/tags.scm	/^(define caddr 0)$/;"	f	language:Scheme
cadr	/tmp/tags.scm	/^(define cadr 0)$/;"	f	language:Scheme
call-with-bytevector-output-port	/tmp/tags.scm	/^(define call-with-bytevector-output-port 0)$/;"	f	language:Scheme
call-with-current-continuation	/tmp/tags.scm	/^(define call-with-current-continuation 0)$/;"	f	language:Scheme
call-with-input-file	/tmp/tags.scm	/^(define call-with-input-file 0)$/;"	f	language:Scheme
call-with-output-file	/tmp/tags.scm	/^(define call-with-output-file 0)$/;"	f	language:Scheme
call-with-port	/tmp/tags.scm	/^(define call-with-port 0)$/;"	f	language:Scheme
call-with-string-output-port	/tmp/tags.scm	/^(define call-with-string-output-port 0)$/;"	f	language:Scheme
call-with-values	/tmp/tags.scm	/^(define call-with-values 0)$/;"	f	language:Scheme
call/1cc	/tmp/tags.scm	/^(define call\/1cc 0)$/;"	f	language:Scheme
call/cc	/tmp/tags.scm	/^(define call\/cc 0)$/;"	f	language:Scheme
car	/tmp/tags.scm	/^(define car 0)$/;"	f	language:Scheme
case	/tmp/tags.scm	/^(define case 0)$/;"	f	language:Scheme
case-lambda	/tmp/tags.scm	/^(define case-lambda 0)$/;"	f	language:Scheme
case-sensitive	/tmp/tags.scm	/^(define case-sensitive 0)$/;"	f	language:Scheme
cd	/tmp/tags.scm	/^(define cd 0)$/;"	f	language:Scheme
cdaaar	/tmp/tags.scm	/^(define cdaaar 0)$/;"	f	language:Scheme
cdaadr	/tmp/tags.scm	/^(define cdaadr 0)$/;"	f	language:Scheme
cdaar	/tmp/tags.scm	/^(define cdaar 0)$/;"	f	language:Scheme
cdadar	/tmp/tags.scm	/^(define cdadar 0)$/;"	f	language:Scheme
cdaddr	/tmp/tags.scm	/^(define cdaddr 0)$/;"	f	language:Scheme
cdadr	/tmp/tags.scm	/^(define cdadr 0)$/;"	f	language:Scheme
cdar	/tmp/tags.scm	/^(define cdar 0)$/;"	f	language:Scheme
cddaar	/tmp/tags.scm	/^(define cddaar 0)$/;"	f	language:Scheme
cddadr	/tmp/tags.scm	/^(define cddadr 0)$/;"	f	language:Scheme
cddar	/tmp/tags.scm	/^(define cddar 0)$/;"	f	language:Scheme
cdddar	/tmp/tags.scm	/^(define cdddar 0)$/;"	f	language:Scheme
cddddr	/tmp/tags.scm	/^(define cddddr 0)$/;"	f	language:Scheme
cdddr	/tmp/tags.scm	/^(define cdddr 0)$/;"	f	language:Scheme
cddr	/tmp/tags.scm	/^(define cddr 0)$/;"	f	language:Scheme
cdr	/tmp/tags.scm	/^(define cdr 0)$/;"	f	language:Scheme
ceiling	/tmp/tags.scm	/^(define ceiling 0)$/;"	f	language:Scheme
cfl*	/tmp/tags.scm	/^(define cfl* 0)$/;"	f	language:Scheme
cfl+	/tmp/tags.scm	/^(define cfl+ 0)$/;"	f	language:Scheme
cfl-	/tmp/tags.scm	/^(define cfl- 0)$/;"	f	language:Scheme
cfl-conjugate	/tmp/tags.scm	/^(define cfl-conjugate 0)$/;"	f	language:Scheme
cfl-imag-part	/tmp/tags.scm	/^(define cfl-imag-part 0)$/;"	f	language:Scheme
cfl-magnitude-squared	/tmp/tags.scm	/^(define cfl-magnitude-squared 0)$/;"	f	language:Scheme
cfl-real-part	/tmp/tags.scm	/^(define cfl-real-part 0)$/;"	f	language:Scheme
cfl/	/tmp/tags.scm	/^(define cfl\/ 0)$/;"	f	language:Scheme
cfl=	/tmp/tags.scm	/^(define cfl= 0)$/;"	f	language:Scheme
cflonum?	/tmp/tags.scm	/^(define cflonum? 0)$/;"	f	language:Scheme
char-	/tmp/tags.scm	/^(define char- 0)$/;"	f	language:Scheme
char->integer	/tmp/tags.scm	/^(define char->integer 0)$/;"	f	language:Scheme
char-alphabetic?	/tmp/tags.scm	/^(define char-alphabetic? 0)$/;"	f	language:Scheme
char-ci<=?	/tmp/tags.scm	/^(define char-ci<=? 0)$/;"	f	language:Scheme
char-ci<?	/tmp/tags.scm	/^(define char-ci<? 0)$/;"	f	language:Scheme
char-ci=?	/tmp/tags.scm	/^(define char-ci=? 0)$/;"	f	language:Scheme
char-ci>=?	/tmp/tags.scm	/^(define char-ci>=? 0)$/;"	f	language:Scheme
char-ci>?	/tmp/tags.scm	/^(define char-ci>? 0)$/;"	f	language:Scheme
char-downcase	/tmp/tags.scm	/^(define char-downcase 0)$/;"	f	language:Scheme
char-equal?	/tmp/tags.scm	/^(define char-equal? 0)$/;"	f	language:Scheme
char-foldcase	/tmp/tags.scm	/^(define char-foldcase 0)$/;"	f	language:Scheme
char-general-category	/tmp/tags.scm	/^(define char-general-category 0)$/;"	f	language:Scheme
char-less?	/tmp/tags.scm	/^(define char-less? 0)$/;"	f	language:Scheme
char-lower-case?	/tmp/tags.scm	/^(define char-lower-case? 0)$/;"	f	language:Scheme
char-name	/tmp/tags.scm	/^(define char-name 0)$/;"	f	language:Scheme
char-numeric?	/tmp/tags.scm	/^(define char-numeric? 0)$/;"	f	language:Scheme
char-ready?	/tmp/tags.scm	/^(define char-ready? 0)$/;"	f	language:Scheme
char-title-case?	/tmp/tags.scm	/^(define char-title-case? 0)$/;"	f	language:Scheme
char-titlecase	/tmp/tags.scm	/^(define char-titlecase 0)$/;"	f	language:Scheme
char-upcase	/tmp/tags.scm	/^(define char-upcase 0)$/;"	f	language:Scheme
char-upper-case?	/tmp/tags.scm	/^(define char-upper-case? 0)$/;"	f	language:Scheme
char-whitespace?	/tmp/tags.scm	/^(define char-whitespace? 0)$/;"	f	language:Scheme
char<=?	/tmp/tags.scm	/^(define char<=? 0)$/;"	f	language:Scheme
char<?	/tmp/tags.scm	/^(define char<? 0)$/;"	f	language:Scheme
char=?	/tmp/tags.scm	/^(define char=? 0)$/;"	f	language:Scheme
char>=?	/tmp/tags.scm	/^(define char>=? 0)$/;"	f	language:Scheme
char>?	/tmp/tags.scm	/^(define char>? 0)$/;"	f	language:Scheme
char?	/tmp/tags.scm	/^(define char? 0)$/;"	f	language:Scheme
chmod	/tmp/tags.scm	/^(define chmod 0)$/;"	f	language:Scheme
clear-input	/tmp/tags.scm	/^(define clear-input 0)$/;"	f	language:Scheme
clear-input-port	/tmp/tags.scm	/^(define clear-input-port 0)$/;"	f	language:Scheme
clear-output	/tmp/tags.scm	/^(define clear-output 0)$/;"	f	language:Scheme
clear-output-port	/tmp/tags.scm	/^(define clear-output-port 0)$/;"	f	language:Scheme
close-input-port	/tmp/tags.scm	/^(define close-input-port 0)$/;"	f	language:Scheme
close-output-port	/tmp/tags.scm	/^(define close-output-port 0)$/;"	f	language:Scheme
close-port	/tmp/tags.scm	/^(define close-port 0)$/;"	f	language:Scheme
closure?	/tmp/tags.scm	/^(define closure? 0)$/;"	f	language:Scheme
collect	/tmp/tags.scm	/^(define collect 0)$/;"	f	language:Scheme
collect-generation-radix	/tmp/tags.scm	/^(define collect-generation-radix 0)$/;"	f	language:Scheme
collect-maximum-generation	/tmp/tags.scm	/^(define collect-maximum-generation 0)$/;"	f	language:Scheme
collect-notify	/tmp/tags.scm	/^(define collect-notify 0)$/;"	f	language:Scheme
collect-rendezvous	/tmp/tags.scm	/^(define collect-rendezvous 0)$/;"	f	language:Scheme
collect-request-handler	/tmp/tags.scm	/^(define collect-request-handler 0)$/;"	f	language:Scheme
collect-trip-bytes	/tmp/tags.scm	/^(define collect-trip-bytes 0)$/;"	f	language:Scheme
collections	/tmp/tags.scm	/^(define collections 0)$/;"	f	language:Scheme
command-line	/tmp/tags.scm	/^(define command-line 0)$/;"	f	language:Scheme
command-line-arguments	/tmp/tags.scm	/^(define command-line-arguments 0)$/;"	f	language:Scheme
comment	/tmp/tags.scm	/^(define comment 0)$/;"	f	language:Scheme
commonization-level	/tmp/tags.scm	/^(define commonization-level 0)$/;"	f	language:Scheme
compile	/tmp/tags.scm	/^(define compile 0)$/;"	f	language:Scheme
compile-compressed	/tmp/tags.scm	/^(define compile-compressed 0)$/;"	f	language:Scheme
compile-eval	/tmp/tags.scm	/^(define compile-eval 0)$/;"	f	language:Scheme
compile-file	/tmp/tags.scm	/^(define compile-file 0)$/;"	f	language:Scheme
compile-file-message	/tmp/tags.scm	/^(define compile-file-message 0)$/;"	f	language:Scheme
compile-imported-libraries	/tmp/tags.scm	/^(define compile-imported-libraries 0)$/;"	f	language:Scheme
compile-interpret-simple	/tmp/tags.scm	/^(define compile-interpret-simple 0)$/;"	f	language:Scheme
compile-library	/tmp/tags.scm	/^(define compile-library 0)$/;"	f	language:Scheme
compile-library-handler	/tmp/tags.scm	/^(define compile-library-handler 0)$/;"	f	language:Scheme
compile-port	/tmp/tags.scm	/^(define compile-port 0)$/;"	f	language:Scheme
compile-profile	/tmp/tags.scm	/^(define compile-profile 0)$/;"	f	language:Scheme
compile-program	/tmp/tags.scm	/^(define compile-program 0)$/;"	f	language:Scheme
compile-program-handler	/tmp/tags.scm	/^(define compile-program-handler 0)$/;"	f	language:Scheme
compile-script	/tmp/tags.scm	/^(define compile-script 0)$/;"	f	language:Scheme
compile-to-file	/tmp/tags.scm	/^(define compile-to-file 0)$/;"	f	language:Scheme
compile-to-port	/tmp/tags.scm	/^(define compile-to-port 0)$/;"	f	language:Scheme
compile-whole-library	/tmp/tags.scm	/^(define compile-whole-library 0)$/;"	f	language:Scheme
compile-whole-program	/tmp/tags.scm	/^(define compile-whole-program 0)$/;"	f	language:Scheme
complex?	/tmp/tags.scm	/^(define complex? 0)$/;"	f	language:Scheme
compute-composition	/tmp/tags.scm	/^(define compute-composition 0)$/;"	f	language:Scheme
compute-size	/tmp/tags.scm	/^(define compute-size 0)$/;"	f	language:Scheme
cond	/tmp/tags.scm	/^(define cond 0)$/;"	f	language:Scheme
condition	/tmp/tags.scm	/^(define condition 0)$/;"	f	language:Scheme
condition-accessor	/tmp/tags.scm	/^(define condition-accessor 0)$/;"	f	language:Scheme
condition-continuation	/tmp/tags.scm	/^(define condition-continuation 0)$/;"	f	language:Scheme
condition-irritants	/tmp/tags.scm	/^(define condition-irritants 0)$/;"	f	language:Scheme
condition-message	/tmp/tags.scm	/^(define condition-message 0)$/;"	f	language:Scheme
condition-predicate	/tmp/tags.scm	/^(define condition-predicate 0)$/;"	f	language:Scheme
condition-who	/tmp/tags.scm	/^(define condition-who 0)$/;"	f	language:Scheme
condition?	/tmp/tags.scm	/^(define condition? 0)$/;"	f	language:Scheme
conjugate	/tmp/tags.scm	/^(define conjugate 0)$/;"	f	language:Scheme
cons	/tmp/tags.scm	/^(define cons 0)$/;"	f	language:Scheme
cons*	/tmp/tags.scm	/^(define cons* 0)$/;"	f	language:Scheme
console-error-port	/tmp/tags.scm	/^(define console-error-port 0)$/;"	f	language:Scheme
console-input-port	/tmp/tags.scm	/^(define console-input-port 0)$/;"	f	language:Scheme
console-output-port	/tmp/tags.scm	/^(define console-output-port 0)$/;"	f	language:Scheme
constructor	/tmp/tags.scm	/^(define constructor 0)$/;"	f	language:Scheme
continuation-condition?	/tmp/tags.scm	/^(define continuation-condition? 0)$/;"	f	language:Scheme
copy-environment	/tmp/tags.scm	/^(define copy-environment 0)$/;"	f	language:Scheme
copy-list	/tmp/tags.scm	/^(define copy-list 0)$/;"	f	language:Scheme
copy-string	/tmp/tags.scm	/^(define copy-string 0)$/;"	f	language:Scheme
copy-time	/tmp/tags.scm	/^(define copy-time 0)$/;"	f	language:Scheme
copy-tree	/tmp/tags.scm	/^(define copy-tree 0)$/;"	f	language:Scheme
copy-vector	/tmp/tags.scm	/^(define copy-vector 0)$/;"	f	language:Scheme
cos	/tmp/tags.scm	/^(define cos 0)$/;"	f	language:Scheme
cosh	/tmp/tags.scm	/^(define cosh 0)$/;"	f	language:Scheme
cost-center-allocation-count	/tmp/tags.scm	/^(define cost-center-allocation-count 0)$/;"	f	language:Scheme
cost-center-instruction-count	/tmp/tags.scm	/^(define cost-center-instruction-count 0)$/;"	f	language:Scheme
cost-center-time	/tmp/tags.scm	/^(define cost-center-time 0)$/;"	f	language:Scheme
cost-center?	/tmp/tags.scm	/^(define cost-center? 0)$/;"	f	language:Scheme
cp0-effort-limit	/tmp/tags.scm	/^(define cp0-effort-limit 0)$/;"	f	language:Scheme
cp0-outer-unroll-limit	/tmp/tags.scm	/^(define cp0-outer-unroll-limit 0)$/;"	f	language:Scheme
cp0-score-limit	/tmp/tags.scm	/^(define cp0-score-limit 0)$/;"	f	language:Scheme
cpu-time	/tmp/tags.scm	/^(define cpu-time 0)$/;"	f	language:Scheme
create-exception-state	/tmp/tags.scm	/^(define create-exception-state 0)$/;"	f	language:Scheme
critical-section	/tmp/tags.scm	/^(define critical-section 0)$/;"	f	language:Scheme
csv7:record-field-accessible?	/tmp/tags.scm	/^(define csv7:record-field-accessible? 0)$/;"	f	language:Scheme
csv7:record-field-accessor	/tmp/tags.scm	/^(define csv7:record-field-accessor 0)$/;"	f	language:Scheme
csv7:record-field-mutable?	/tmp/tags.scm	/^(define csv7:record-field-mutable? 0)$/;"	f	language:Scheme
csv7:record-field-mutator	/tmp/tags.scm	/^(define csv7:record-field-mutator 0)$/;"	f	language:Scheme
csv7:record-type-descriptor	/tmp/tags.scm	/^(define csv7:record-type-descriptor 0)$/;"	f	language:Scheme
csv7:record-type-field-decls	/tmp/tags.scm	/^(define csv7:record-type-field-decls 0)$/;"	f	language:Scheme
csv7:record-type-field-names	/tmp/tags.scm	/^(define csv7:record-type-field-names 0)$/;"	f	language:Scheme
csv7:record-type-name	/tmp/tags.scm	/^(define csv7:record-type-name 0)$/;"	f	language:Scheme
csv7:record-type-symbol	/tmp/tags.scm	/^(define csv7:record-type-symbol 0)$/;"	f	language:Scheme
cull	/tmp/tags.scm	/^(define cull 0)$/;"	f	language:Scheme
cull!	/tmp/tags.scm	/^(define cull! 0)$/;"	f	language:Scheme
current-date	/tmp/tags.scm	/^(define current-date 0)$/;"	f	language:Scheme
current-directory	/tmp/tags.scm	/^(define current-directory 0)$/;"	f	language:Scheme
current-error-port	/tmp/tags.scm	/^(define current-error-port 0)$/;"	f	language:Scheme
current-eval	/tmp/tags.scm	/^(define current-eval 0)$/;"	f	language:Scheme
current-exception-state	/tmp/tags.scm	/^(define current-exception-state 0)$/;"	f	language:Scheme
current-expand	/tmp/tags.scm	/^(define current-expand 0)$/;"	f	language:Scheme
current-input-port	/tmp/tags.scm	/^(define current-input-port 0)$/;"	f	language:Scheme
current-locate-source-object-source	/tmp/tags.scm	/^(define current-locate-source-object-source 0)$/;"	f	language:Scheme
current-make-source-object	/tmp/tags.scm	/^(define current-make-source-object 0)$/;"	f	language:Scheme
current-memory-bytes	/tmp/tags.scm	/^(define current-memory-bytes 0)$/;"	f	language:Scheme
current-output-port	/tmp/tags.scm	/^(define current-output-port 0)$/;"	f	language:Scheme
current-time	/tmp/tags.scm	/^(define current-time 0)$/;"	f	language:Scheme
current-transcoder	/tmp/tags.scm	/^(define current-transcoder 0)$/;"	f	language:Scheme
custom-port-buffer-size	/tmp/tags.scm	/^(define custom-port-buffer-size 0)$/;"	f	language:Scheme
date->time-utc	/tmp/tags.scm	/^(define date->time-utc 0)$/;"	f	language:Scheme
date-and-time	/tmp/tags.scm	/^(define date-and-time 0)$/;"	f	language:Scheme
date-day	/tmp/tags.scm	/^(define date-day 0)$/;"	f	language:Scheme
date-dst?	/tmp/tags.scm	/^(define date-dst? 0)$/;"	f	language:Scheme
date-hour	/tmp/tags.scm	/^(define date-hour 0)$/;"	f	language:Scheme
date-minute	/tmp/tags.scm	/^(define date-minute 0)$/;"	f	language:Scheme
date-month	/tmp/tags.scm	/^(define date-month 0)$/;"	f	language:Scheme
date-nanosecond	/tmp/tags.scm	/^(define date-nanosecond 0)$/;"	f	language:Scheme
date-second	/tmp/tags.scm	/^(define date-second 0)$/;"	f	language:Scheme
date-week-day	/tmp/tags.scm	/^(define date-week-day 0)$/;"	f	language:Scheme
date-year	/tmp/tags.scm	/^(define date-year 0)$/;"	f	language:Scheme
date-year-day	/tmp/tags.scm	/^(define date-year-day 0)$/;"	f	language:Scheme
date-zone-name	/tmp/tags.scm	/^(define date-zone-name 0)$/;"	f	language:Scheme
date-zone-offset	/tmp/tags.scm	/^(define date-zone-offset 0)$/;"	f	language:Scheme
date?	/tmp/tags.scm	/^(define date? 0)$/;"	f	language:Scheme
datum	/tmp/tags.scm	/^(define datum 0)$/;"	f	language:Scheme
datum->syntax	/tmp/tags.scm	/^(define datum->syntax 0)$/;"	f	language:Scheme
datum->syntax-object	/tmp/tags.scm	/^(define datum->syntax-object 0)$/;"	f	language:Scheme
debug	/tmp/tags.scm	/^(define debug 0)$/;"	f	language:Scheme
debug-condition	/tmp/tags.scm	/^(define debug-condition 0)$/;"	f	language:Scheme
debug-level	/tmp/tags.scm	/^(define debug-level 0)$/;"	f	language:Scheme
debug-on-exception	/tmp/tags.scm	/^(define debug-on-exception 0)$/;"	f	language:Scheme
decode-float	/tmp/tags.scm	/^(define decode-float 0)$/;"	f	language:Scheme
default-exception-handler	/tmp/tags.scm	/^(define default-exception-handler 0)$/;"	f	language:Scheme
default-prompt-and-read	/tmp/tags.scm	/^(define default-prompt-and-read 0)$/;"	f	language:Scheme
default-record-equal-procedure	/tmp/tags.scm	/^(define default-record-equal-procedure 0)$/;"	f	language:Scheme
default-record-hash-procedure	/tmp/tags.scm	/^(define default-record-hash-procedure 0)$/;"	f	language:Scheme
defer	/tmp/tags.scm	/^(define defer 0)$/;"	f	language:Scheme
define	/tmp/tags.scm	/^(define define 0)$/;"	f	language:Scheme
define!	/tmp/tags.scm	/^(define define! 0)$/;"	f	language:Scheme
define-condition-type	/tmp/tags.scm	/^(define define-condition-type 0)$/;"	f	language:Scheme
define-enumeration	/tmp/tags.scm	/^(define define-enumeration 0)$/;"	f	language:Scheme
define-ftype	/tmp/tags.scm	/^(define define-ftype 0)$/;"	f	language:Scheme
define-global-value	/tmp/tags.scm	/^(define define-global-value 0)$/;"	f	language:Scheme
define-macro	/tmp/tags.scm	/^(define define-macro 0)$/;"	f	language:Scheme
define-macro!	/tmp/tags.scm	/^(define define-macro! 0)$/;"	f	language:Scheme
define-property	/tmp/tags.scm	/^(define define-property 0)$/;"	f	language:Scheme
define-record	/tmp/tags.scm	/^(define define-record 0)$/;"	f	language:Scheme
define-record-type	/tmp/tags.scm	/^(define define-record-type 0)$/;"	f	language:Scheme
define-struct!	/tmp/tags.scm	/^(define define-struct! 0)$/;"	f	language:Scheme
define-structure	/tmp/tags.scm	/^(define define-structure 0)$/;"	f	language:Scheme
define-syntax	/tmp/tags.scm	/^(define define-syntax 0)$/;"	f	language:Scheme
define-top-level-syntax	/tmp/tags.scm	/^(define define-top-level-syntax 0)$/;"	f	language:Scheme
define-top-level-value	/tmp/tags.scm	/^(define define-top-level-value 0)$/;"	f	language:Scheme
define-values	/tmp/tags.scm	/^(define define-values 0)$/;"	f	language:Scheme
defir	/tmp/tags.scm	/^(define defir 0)$/;"	f	language:Scheme
defmacro	/tmp/tags.scm	/^(define defmacro 0)$/;"	f	language:Scheme
defrec!	/tmp/tags.scm	/^(define defrec! 0)$/;"	f	language:Scheme
defrule	/tmp/tags.scm	/^(define defrule 0)$/;"	f	language:Scheme
delay	/tmp/tags.scm	/^(define delay 0)$/;"	f	language:Scheme
delete-directory	/tmp/tags.scm	/^(define delete-directory 0)$/;"	f	language:Scheme
delete-file	/tmp/tags.scm	/^(define delete-file 0)$/;"	f	language:Scheme
denominator	/tmp/tags.scm	/^(define denominator 0)$/;"	f	language:Scheme
directory-list	/tmp/tags.scm	/^(define directory-list 0)$/;"	f	language:Scheme
directory-separator	/tmp/tags.scm	/^(define directory-separator 0)$/;"	f	language:Scheme
directory-separator?	/tmp/tags.scm	/^(define directory-separator? 0)$/;"	f	language:Scheme
disable-interrupts	/tmp/tags.scm	/^(define disable-interrupts 0)$/;"	f	language:Scheme
display	/tmp/tags.scm	/^(define display 0)$/;"	f	language:Scheme
display-condition	/tmp/tags.scm	/^(define display-condition 0)$/;"	f	language:Scheme
display-statistics	/tmp/tags.scm	/^(define display-statistics 0)$/;"	f	language:Scheme
display-string	/tmp/tags.scm	/^(define display-string 0)$/;"	f	language:Scheme
div	/tmp/tags.scm	/^(define div 0)$/;"	f	language:Scheme
div-and-mod	/tmp/tags.scm	/^(define div-and-mod 0)$/;"	f	language:Scheme
div0	/tmp/tags.scm	/^(define div0 0)$/;"	f	language:Scheme
div0-and-mod0	/tmp/tags.scm	/^(define div0-and-mod0 0)$/;"	f	language:Scheme
do	/tmp/tags.scm	/^(define do 0)$/;"	f	language:Scheme
drop-prefix	/tmp/tags.scm	/^(define drop-prefix 0)$/;"	f	language:Scheme
dynamic-wind	/tmp/tags.scm	/^(define dynamic-wind 0)$/;"	f	language:Scheme
else	/tmp/tags.scm	/^(define else 0)$/;"	f	language:Scheme
enable-cross-library-optimization	/tmp/tags.scm	/^(define enable-cross-library-optimization 0)$/;"	f	language:Scheme
enable-interrupts	/tmp/tags.scm	/^(define enable-interrupts 0)$/;"	f	language:Scheme
enable-object-counts	/tmp/tags.scm	/^(define enable-object-counts 0)$/;"	f	language:Scheme
endianness	/tmp/tags.scm	/^(define endianness 0)$/;"	f	language:Scheme
engine-block	/tmp/tags.scm	/^(define engine-block 0)$/;"	f	language:Scheme
engine-return	/tmp/tags.scm	/^(define engine-return 0)$/;"	f	language:Scheme
enum-set->list	/tmp/tags.scm	/^(define enum-set->list 0)$/;"	f	language:Scheme
enum-set-complement	/tmp/tags.scm	/^(define enum-set-complement 0)$/;"	f	language:Scheme
enum-set-constructor	/tmp/tags.scm	/^(define enum-set-constructor 0)$/;"	f	language:Scheme
enum-set-difference	/tmp/tags.scm	/^(define enum-set-difference 0)$/;"	f	language:Scheme
enum-set-indexer	/tmp/tags.scm	/^(define enum-set-indexer 0)$/;"	f	language:Scheme
enum-set-intersection	/tmp/tags.scm	/^(define enum-set-intersection 0)$/;"	f	language:Scheme
enum-set-member?	/tmp/tags.scm	/^(define enum-set-member? 0)$/;"	f	language:Scheme
enum-set-projection	/tmp/tags.scm	/^(define enum-set-projection 0)$/;"	f	language:Scheme
enum-set-subset?	/tmp/tags.scm	/^(define enum-set-subset? 0)$/;"	f	language:Scheme
enum-set-union	/tmp/tags.scm	/^(define enum-set-union 0)$/;"	f	language:Scheme
enum-set-universe	/tmp/tags.scm	/^(define enum-set-universe 0)$/;"	f	language:Scheme
enum-set=?	/tmp/tags.scm	/^(define enum-set=? 0)$/;"	f	language:Scheme
enum-set?	/tmp/tags.scm	/^(define enum-set? 0)$/;"	f	language:Scheme
enumerate	/tmp/tags.scm	/^(define enumerate 0)$/;"	f	language:Scheme
environment	/tmp/tags.scm	/^(define environment 0)$/;"	f	language:Scheme
environment-mutable?	/tmp/tags.scm	/^(define environment-mutable? 0)$/;"	f	language:Scheme
environment-symbols	/tmp/tags.scm	/^(define environment-symbols 0)$/;"	f	language:Scheme
environment?	/tmp/tags.scm	/^(define environment? 0)$/;"	f	language:Scheme
eof-object	/tmp/tags.scm	/^(define eof-object 0)$/;"	f	language:Scheme
eof-object?	/tmp/tags.scm	/^(define eof-object? 0)$/;"	f	language:Scheme
eol-style	/tmp/tags.scm	/^(define eol-style 0)$/;"	f	language:Scheme
ephemeron-cons	/tmp/tags.scm	/^(define ephemeron-cons 0)$/;"	f	language:Scheme
ephemeron-pair?	/tmp/tags.scm	/^(define ephemeron-pair? 0)$/;"	f	language:Scheme
eq-hashtable-cell	/tmp/tags.scm	/^(define eq-hashtable-cell 0)$/;"	f	language:Scheme
eq-hashtable-contains?	/tmp/tags.scm	/^(define eq-hashtable-contains? 0)$/;"	f	language:Scheme
eq-hashtable-delete!	/tmp/tags.scm	/^(define eq-hashtable-delete! 0)$/;"	f	language:Scheme
eq-hashtable-ephemeron?	/tmp/tags.scm	/^(define eq-hashtable-ephemeron? 0)$/;"	f	language:Scheme
eq-hashtable-ref	/tmp/tags.scm	/^(define eq-hashtable-ref 0)$/;"	f	language:Scheme
eq-hashtable-set!	/tmp/tags.scm	/^(define eq-hashtable-set! 0)$/;"	f	language:Scheme
eq-hashtable-update!	/tmp/tags.scm	/^(define eq-hashtable-update! 0)$/;"	f	language:Scheme
eq-hashtable-weak?	/tmp/tags.scm	/^(define eq-hashtable-weak? 0)$/;"	f	language:Scheme
eq-hashtable?	/tmp/tags.scm	/^(define eq-hashtable? 0)$/;"	f	language:Scheme
eq?	/tmp/tags.scm	/^(define eq? 0)$/;"	f	language:Scheme
equal-hash	/tmp/tags.scm	/^(define equal-hash 0)$/;"	f	language:Scheme
equal?	/tmp/tags.scm	/^(define equal? 0)$/;"	f	language:Scheme
eqv?	/tmp/tags.scm	/^(define eqv? 0)$/;"	f	language:Scheme
er-macro-transformer	/tmp/tags.scm	/^(define er-macro-transformer 0)$/;"	f	language:Scheme
error	/tmp/tags.scm	/^(define error 0)$/;"	f	language:Scheme
error-handling-mode	/tmp/tags.scm	/^(define error-handling-mode 0)$/;"	f	language:Scheme
error?	/tmp/tags.scm	/^(define error? 0)$/;"	f	language:Scheme
errorf	/tmp/tags.scm	/^(define errorf 0)$/;"	f	language:Scheme
eval	/tmp/tags.scm	/^(define eval 0)$/;"	f	language:Scheme
eval-syntax-expanders-when	/tmp/tags.scm	/^(define eval-syntax-expanders-when 0)$/;"	f	language:Scheme
eval-when	/tmp/tags.scm	/^(define eval-when 0)$/;"	f	language:Scheme
even?	/tmp/tags.scm	/^(define even? 0)$/;"	f	language:Scheme
exact	/tmp/tags.scm	/^(define exact 0)$/;"	f	language:Scheme
exact->inexact	/tmp/tags.scm	/^(define exact->inexact 0)$/;"	f	language:Scheme
exact-integer-sqrt	/tmp/tags.scm	/^(define exact-integer-sqrt 0)$/;"	f	language:Scheme
exact?	/tmp/tags.scm	/^(define exact? 0)$/;"	f	language:Scheme
except	/tmp/tags.scm	/^(define except 0)$/;"	f	language:Scheme
exclusive-cond	/tmp/tags.scm	/^(define exclusive-cond 0)$/;"	f	language:Scheme
exists	/tmp/tags.scm	/^(define exists 0)$/;"	f	language:Scheme
exit	/tmp/tags.scm	/^(define exit 0)$/;"	f	language:Scheme
exit-handler	/tmp/tags.scm	/^(define exit-handler 0)$/;"	f	language:Scheme
exp	/tmp/tags.scm	/^(define exp 0)$/;"	f	language:Scheme
expand	/tmp/tags.scm	/^(define expand 0)$/;"	f	language:Scheme
expand-output	/tmp/tags.scm	/^(define expand-output 0)$/;"	f	language:Scheme
expand/optimize	/tmp/tags.scm	/^(define expand\/optimize 0)$/;"	f	language:Scheme
expand/optimize-output	/tmp/tags.scm	/^(define expand\/optimize-output 0)$/;"	f	language:Scheme
export	/tmp/tags.scm	/^(define export 0)$/;"	f	language:Scheme
expression-editor	/tmp/tags.scm	/^(define expression-editor 0)$/;"	f	language:Scheme
expt	/tmp/tags.scm	/^(define expt 0)$/;"	f	language:Scheme
expt-mod	/tmp/tags.scm	/^(define expt-mod 0)$/;"	f	language:Scheme
extend-syntax	/tmp/tags.scm	/^(define extend-syntax 0)$/;"	f	language:Scheme
false	/tmp/tags.scm	/^(define false 0)$/;"	f	language:Scheme
fasl-file	/tmp/tags.scm	/^(define fasl-file 0)$/;"	f	language:Scheme
fasl-read	/tmp/tags.scm	/^(define fasl-read 0)$/;"	f	language:Scheme
fasl-strip-options	/tmp/tags.scm	/^(define fasl-strip-options 0)$/;"	f	language:Scheme
fasl-write	/tmp/tags.scm	/^(define fasl-write 0)$/;"	f	language:Scheme
ferror	/tmp/tags.scm	/^(define ferror 0)$/;"	f	language:Scheme
fields	/tmp/tags.scm	/^(define fields 0)$/;"	f	language:Scheme
fifth	/tmp/tags.scm	/^(define fifth 0)$/;"	f	language:Scheme
file-access-time	/tmp/tags.scm	/^(define file-access-time 0)$/;"	f	language:Scheme
file-buffer-size	/tmp/tags.scm	/^(define file-buffer-size 0)$/;"	f	language:Scheme
file-change-time	/tmp/tags.scm	/^(define file-change-time 0)$/;"	f	language:Scheme
file-directory?	/tmp/tags.scm	/^(define file-directory? 0)$/;"	f	language:Scheme
file-exists?	/tmp/tags.scm	/^(define file-exists? 0)$/;"	f	language:Scheme
file-length	/tmp/tags.scm	/^(define file-length 0)$/;"	f	language:Scheme
file-modification-time	/tmp/tags.scm	/^(define file-modification-time 0)$/;"	f	language:Scheme
file-options	/tmp/tags.scm	/^(define file-options 0)$/;"	f	language:Scheme
file-port?	/tmp/tags.scm	/^(define file-port? 0)$/;"	f	language:Scheme
file-position	/tmp/tags.scm	/^(define file-position 0)$/;"	f	language:Scheme
file-regular?	/tmp/tags.scm	/^(define file-regular? 0)$/;"	f	language:Scheme
file-symbolic-link?	/tmp/tags.scm	/^(define file-symbolic-link? 0)$/;"	f	language:Scheme
filter	/tmp/tags.scm	/^(define filter 0)$/;"	f	language:Scheme
find	/tmp/tags.scm	/^(define find 0)$/;"	f	language:Scheme
finite?	/tmp/tags.scm	/^(define finite? 0)$/;"	f	language:Scheme
first	/tmp/tags.scm	/^(define first 0)$/;"	f	language:Scheme
fixnum->flonum	/tmp/tags.scm	/^(define fixnum->flonum 0)$/;"	f	language:Scheme
fixnum-width	/tmp/tags.scm	/^(define fixnum-width 0)$/;"	f	language:Scheme
fixnum?	/tmp/tags.scm	/^(define fixnum? 0)$/;"	f	language:Scheme
fl*	/tmp/tags.scm	/^(define fl* 0)$/;"	f	language:Scheme
fl+	/tmp/tags.scm	/^(define fl+ 0)$/;"	f	language:Scheme
fl-	/tmp/tags.scm	/^(define fl- 0)$/;"	f	language:Scheme
fl-make-rectangular	/tmp/tags.scm	/^(define fl-make-rectangular 0)$/;"	f	language:Scheme
fl/	/tmp/tags.scm	/^(define fl\/ 0)$/;"	f	language:Scheme
fl<	/tmp/tags.scm	/^(define fl< 0)$/;"	f	language:Scheme
fl<=	/tmp/tags.scm	/^(define fl<= 0)$/;"	f	language:Scheme
fl<=?	/tmp/tags.scm	/^(define fl<=? 0)$/;"	f	language:Scheme
fl<?	/tmp/tags.scm	/^(define fl<? 0)$/;"	f	language:Scheme
fl=	/tmp/tags.scm	/^(define fl= 0)$/;"	f	language:Scheme
fl=?	/tmp/tags.scm	/^(define fl=? 0)$/;"	f	language:Scheme
fl>	/tmp/tags.scm	/^(define fl> 0)$/;"	f	language:Scheme
fl>=	/tmp/tags.scm	/^(define fl>= 0)$/;"	f	language:Scheme
fl>=?	/tmp/tags.scm	/^(define fl>=? 0)$/;"	f	language:Scheme
fl>?	/tmp/tags.scm	/^(define fl>? 0)$/;"	f	language:Scheme
flabs	/tmp/tags.scm	/^(define flabs 0)$/;"	f	language:Scheme
flacos	/tmp/tags.scm	/^(define flacos 0)$/;"	f	language:Scheme
flasin	/tmp/tags.scm	/^(define flasin 0)$/;"	f	language:Scheme
flatan	/tmp/tags.scm	/^(define flatan 0)$/;"	f	language:Scheme
flceiling	/tmp/tags.scm	/^(define flceiling 0)$/;"	f	language:Scheme
flcos	/tmp/tags.scm	/^(define flcos 0)$/;"	f	language:Scheme
fldenominator	/tmp/tags.scm	/^(define fldenominator 0)$/;"	f	language:Scheme
fldiv	/tmp/tags.scm	/^(define fldiv 0)$/;"	f	language:Scheme
fldiv-and-mod	/tmp/tags.scm	/^(define fldiv-and-mod 0)$/;"	f	language:Scheme
fldiv0	/tmp/tags.scm	/^(define fldiv0 0)$/;"	f	language:Scheme
fldiv0-and-mod0	/tmp/tags.scm	/^(define fldiv0-and-mod0 0)$/;"	f	language:Scheme
fleven?	/tmp/tags.scm	/^(define fleven? 0)$/;"	f	language:Scheme
flexp	/tmp/tags.scm	/^(define flexp 0)$/;"	f	language:Scheme
flexpt	/tmp/tags.scm	/^(define flexpt 0)$/;"	f	language:Scheme
flfinite?	/tmp/tags.scm	/^(define flfinite? 0)$/;"	f	language:Scheme
flfloor	/tmp/tags.scm	/^(define flfloor 0)$/;"	f	language:Scheme
flinfinite?	/tmp/tags.scm	/^(define flinfinite? 0)$/;"	f	language:Scheme
flinteger?	/tmp/tags.scm	/^(define flinteger? 0)$/;"	f	language:Scheme
fllog	/tmp/tags.scm	/^(define fllog 0)$/;"	f	language:Scheme
fllp	/tmp/tags.scm	/^(define fllp 0)$/;"	f	language:Scheme
flmax	/tmp/tags.scm	/^(define flmax 0)$/;"	f	language:Scheme
flmin	/tmp/tags.scm	/^(define flmin 0)$/;"	f	language:Scheme
flmod	/tmp/tags.scm	/^(define flmod 0)$/;"	f	language:Scheme
flmod0	/tmp/tags.scm	/^(define flmod0 0)$/;"	f	language:Scheme
flnan?	/tmp/tags.scm	/^(define flnan? 0)$/;"	f	language:Scheme
flnegative?	/tmp/tags.scm	/^(define flnegative? 0)$/;"	f	language:Scheme
flnonnegative?	/tmp/tags.scm	/^(define flnonnegative? 0)$/;"	f	language:Scheme
flnonpositive?	/tmp/tags.scm	/^(define flnonpositive? 0)$/;"	f	language:Scheme
flnumerator	/tmp/tags.scm	/^(define flnumerator 0)$/;"	f	language:Scheme
float	/tmp/tags.scm	/^(define float 0)$/;"	f	language:Scheme
float?	/tmp/tags.scm	/^(define float? 0)$/;"	f	language:Scheme
flodd?	/tmp/tags.scm	/^(define flodd? 0)$/;"	f	language:Scheme
flonum->fixnum	/tmp/tags.scm	/^(define flonum->fixnum 0)$/;"	f	language:Scheme
flonum?	/tmp/tags.scm	/^(define flonum? 0)$/;"	f	language:Scheme
floor	/tmp/tags.scm	/^(define floor 0)$/;"	f	language:Scheme
flpositive?	/tmp/tags.scm	/^(define flpositive? 0)$/;"	f	language:Scheme
flround	/tmp/tags.scm	/^(define flround 0)$/;"	f	language:Scheme
flsin	/tmp/tags.scm	/^(define flsin 0)$/;"	f	language:Scheme
flsqrt	/tmp/tags.scm	/^(define flsqrt 0)$/;"	f	language:Scheme
fltan	/tmp/tags.scm	/^(define fltan 0)$/;"	f	language:Scheme
fltruncate	/tmp/tags.scm	/^(define fltruncate 0)$/;"	f	language:Scheme
fluid-let	/tmp/tags.scm	/^(define fluid-let 0)$/;"	f	language:Scheme
fluid-let-syntax	/tmp/tags.scm	/^(define fluid-let-syntax 0)$/;"	f	language:Scheme
flush-output	/tmp/tags.scm	/^(define flush-output 0)$/;"	f	language:Scheme
flush-output-port	/tmp/tags.scm	/^(define flush-output-port 0)$/;"	f	language:Scheme
flzero?	/tmp/tags.scm	/^(define flzero? 0)$/;"	f	language:Scheme
fold-left	/tmp/tags.scm	/^(define fold-left 0)$/;"	f	language:Scheme
fold-right	/tmp/tags.scm	/^(define fold-right 0)$/;"	f	language:Scheme
for-all	/tmp/tags.scm	/^(define for-all 0)$/;"	f	language:Scheme
for-each	/tmp/tags.scm	/^(define for-each 0)$/;"	f	language:Scheme
force	/tmp/tags.scm	/^(define force 0)$/;"	f	language:Scheme
foreign-address-name	/tmp/tags.scm	/^(define foreign-address-name 0)$/;"	f	language:Scheme
foreign-alloc	/tmp/tags.scm	/^(define foreign-alloc 0)$/;"	f	language:Scheme
foreign-callable	/tmp/tags.scm	/^(define foreign-callable 0)$/;"	f	language:Scheme
foreign-callable-code-object	/tmp/tags.scm	/^(define foreign-callable-code-object 0)$/;"	f	language:Scheme
foreign-callable-entry-point	/tmp/tags.scm	/^(define foreign-callable-entry-point 0)$/;"	f	language:Scheme
foreign-entry	/tmp/tags.scm	/^(define foreign-entry 0)$/;"	f	language:Scheme
foreign-entry?	/tmp/tags.scm	/^(define foreign-entry? 0)$/;"	f	language:Scheme
foreign-free	/tmp/tags.scm	/^(define foreign-free 0)$/;"	f	language:Scheme
foreign-procedure	/tmp/tags.scm	/^(define foreign-procedure 0)$/;"	f	language:Scheme
foreign-ref	/tmp/tags.scm	/^(define foreign-ref 0)$/;"	f	language:Scheme
foreign-set!	/tmp/tags.scm	/^(define foreign-set! 0)$/;"	f	language:Scheme
foreign-sizeof	/tmp/tags.scm	/^(define foreign-sizeof 0)$/;"	f	language:Scheme
format	/tmp/tags.scm	/^(define format 0)$/;"	f	language:Scheme
format-condition?	/tmp/tags.scm	/^(define format-condition? 0)$/;"	f	language:Scheme
forth	/tmp/tags.scm	/^(define forth 0)$/;"	f	language:Scheme
fourth	/tmp/tags.scm	/^(define fourth 0)$/;"	f	language:Scheme
fprintf	/tmp/tags.scm	/^(define fprintf 0)$/;"	f	language:Scheme
free-identifier=?	/tmp/tags.scm	/^(define free-identifier=? 0)$/;"	f	language:Scheme
fresh-line	/tmp/tags.scm	/^(define fresh-line 0)$/;"	f	language:Scheme
ftype-&ref	/tmp/tags.scm	/^(define ftype-&ref 0)$/;"	f	language:Scheme
ftype-init-lock!	/tmp/tags.scm	/^(define ftype-init-lock! 0)$/;"	f	language:Scheme
ftype-lock!	/tmp/tags.scm	/^(define ftype-lock! 0)$/;"	f	language:Scheme
ftype-locked-decr!	/tmp/tags.scm	/^(define ftype-locked-decr! 0)$/;"	f	language:Scheme
ftype-locked-incr!	/tmp/tags.scm	/^(define ftype-locked-incr! 0)$/;"	f	language:Scheme
ftype-pointer->sexpr	/tmp/tags.scm	/^(define ftype-pointer->sexpr 0)$/;"	f	language:Scheme
ftype-pointer-address	/tmp/tags.scm	/^(define ftype-pointer-address 0)$/;"	f	language:Scheme
ftype-pointer-ftype	/tmp/tags.scm	/^(define ftype-pointer-ftype 0)$/;"	f	language:Scheme
ftype-pointer-null?	/tmp/tags.scm	/^(define ftype-pointer-null? 0)$/;"	f	language:Scheme
ftype-pointer=?	/tmp/tags.scm	/^(define ftype-pointer=? 0)$/;"	f	language:Scheme
ftype-pointer?	/tmp/tags.scm	/^(define ftype-pointer? 0)$/;"	f	language:Scheme
ftype-ref	/tmp/tags.scm	/^(define ftype-ref 0)$/;"	f	language:Scheme
ftype-set!	/tmp/tags.scm	/^(define ftype-set! 0)$/;"	f	language:Scheme
ftype-sizeof	/tmp/tags.scm	/^(define ftype-sizeof 0)$/;"	f	language:Scheme
ftype-spin-lock!	/tmp/tags.scm	/^(define ftype-spin-lock! 0)$/;"	f	language:Scheme
ftype-unlock!	/tmp/tags.scm	/^(define ftype-unlock! 0)$/;"	f	language:Scheme
fx*	/tmp/tags.scm	/^(define fx* 0)$/;"	f	language:Scheme
fx*/carry	/tmp/tags.scm	/^(define fx*\/carry 0)$/;"	f	language:Scheme
fx+	/tmp/tags.scm	/^(define fx+ 0)$/;"	f	language:Scheme
fx+/carry	/tmp/tags.scm	/^(define fx+\/carry 0)$/;"	f	language:Scheme
fx-	/tmp/tags.scm	/^(define fx- 0)$/;"	f	language:Scheme
fx-/carry	/tmp/tags.scm	/^(define fx-\/carry 0)$/;"	f	language:Scheme
fx/	/tmp/tags.scm	/^(define fx\/ 0)$/;"	f	language:Scheme
fx1+	/tmp/tags.scm	/^(define fx1+ 0)$/;"	f	language:Scheme
fx1-	/tmp/tags.scm	/^(define fx1- 0)$/;"	f	language:Scheme
fx<	/tmp/tags.scm	/^(define fx< 0)$/;"	f	language:Scheme
fx<=	/tmp/tags.scm	/^(define fx<= 0)$/;"	f	language:Scheme
fx<=?	/tmp/tags.scm	/^(define fx<=? 0)$/;"	f	language:Scheme
fx<?	/tmp/tags.scm	/^(define fx<? 0)$/;"	f	language:Scheme
fx=	/tmp/tags.scm	/^(define fx= 0)$/;"	f	language:Scheme
fx=?	/tmp/tags.scm	/^(define fx=? 0)$/;"	f	language:Scheme
fx>	/tmp/tags.scm	/^(define fx> 0)$/;"	f	language:Scheme
fx>=	/tmp/tags.scm	/^(define fx>= 0)$/;"	f	language:Scheme
fx>=?	/tmp/tags.scm	/^(define fx>=? 0)$/;"	f	language:Scheme
fx>?	/tmp/tags.scm	/^(define fx>? 0)$/;"	f	language:Scheme
fxabs	/tmp/tags.scm	/^(define fxabs 0)$/;"	f	language:Scheme
fxand	/tmp/tags.scm	/^(define fxand 0)$/;"	f	language:Scheme
fxarithmetic-shift	/tmp/tags.scm	/^(define fxarithmetic-shift 0)$/;"	f	language:Scheme
fxarithmetic-shift-left	/tmp/tags.scm	/^(define fxarithmetic-shift-left 0)$/;"	f	language:Scheme
fxarithmetic-shift-right	/tmp/tags.scm	/^(define fxarithmetic-shift-right 0)$/;"	f	language:Scheme
fxbit-count	/tmp/tags.scm	/^(define fxbit-count 0)$/;"	f	language:Scheme
fxbit-field	/tmp/tags.scm	/^(define fxbit-field 0)$/;"	f	language:Scheme
fxbit-set?	/tmp/tags.scm	/^(define fxbit-set? 0)$/;"	f	language:Scheme
fxcopy-bit	/tmp/tags.scm	/^(define fxcopy-bit 0)$/;"	f	language:Scheme
fxcopy-bit-field	/tmp/tags.scm	/^(define fxcopy-bit-field 0)$/;"	f	language:Scheme
fxdiv	/tmp/tags.scm	/^(define fxdiv 0)$/;"	f	language:Scheme
fxdiv-and-mod	/tmp/tags.scm	/^(define fxdiv-and-mod 0)$/;"	f	language:Scheme
fxdiv0	/tmp/tags.scm	/^(define fxdiv0 0)$/;"	f	language:Scheme
fxdiv0-and-mod0	/tmp/tags.scm	/^(define fxdiv0-and-mod0 0)$/;"	f	language:Scheme
fxeven?	/tmp/tags.scm	/^(define fxeven? 0)$/;"	f	language:Scheme
fxfirst-bit-set	/tmp/tags.scm	/^(define fxfirst-bit-set 0)$/;"	f	language:Scheme
fxif	/tmp/tags.scm	/^(define fxif 0)$/;"	f	language:Scheme
fxior	/tmp/tags.scm	/^(define fxior 0)$/;"	f	language:Scheme
fxlength	/tmp/tags.scm	/^(define fxlength 0)$/;"	f	language:Scheme
fxlogand	/tmp/tags.scm	/^(define fxlogand 0)$/;"	f	language:Scheme
fxlogbit0	/tmp/tags.scm	/^(define fxlogbit0 0)$/;"	f	language:Scheme
fxlogbit1	/tmp/tags.scm	/^(define fxlogbit1 0)$/;"	f	language:Scheme
fxlogbit?	/tmp/tags.scm	/^(define fxlogbit? 0)$/;"	f	language:Scheme
fxlogior	/tmp/tags.scm	/^(define fxlogior 0)$/;"	f	language:Scheme
fxlognot	/tmp/tags.scm	/^(define fxlognot 0)$/;"	f	language:Scheme
fxlogor	/tmp/tags.scm	/^(define fxlogor 0)$/;"	f	language:Scheme
fxlogtest	/tmp/tags.scm	/^(define fxlogtest 0)$/;"	f	language:Scheme
fxlogxor	/tmp/tags.scm	/^(define fxlogxor 0)$/;"	f	language:Scheme
fxmax	/tmp/tags.scm	/^(define fxmax 0)$/;"	f	language:Scheme
fxmin	/tmp/tags.scm	/^(define fxmin 0)$/;"	f	language:Scheme
fxmod	/tmp/tags.scm	/^(define fxmod 0)$/;"	f	language:Scheme
fxmod0	/tmp/tags.scm	/^(define fxmod0 0)$/;"	f	language:Scheme
fxmodulo	/tmp/tags.scm	/^(define fxmodulo 0)$/;"	f	language:Scheme
fxnegative?	/tmp/tags.scm	/^(define fxnegative? 0)$/;"	f	language:Scheme
fxnonnegative?	/tmp/tags.scm	/^(define fxnonnegative? 0)$/;"	f	language:Scheme
fxnonpositive?	/tmp/tags.scm	/^(define fxnonpositive? 0)$/;"	f	language:Scheme
fxnot	/tmp/tags.scm	/^(define fxnot 0)$/;"	f	language:Scheme
fxodd?	/tmp/tags.scm	/^(define fxodd? 0)$/;"	f	language:Scheme
fxpositive?	/tmp/tags.scm	/^(define fxpositive? 0)$/;"	f	language:Scheme
fxquotient	/tmp/tags.scm	/^(define fxquotient 0)$/;"	f	language:Scheme
fxremainder	/tmp/tags.scm	/^(define fxremainder 0)$/;"	f	language:Scheme
fxreverse-bit-field	/tmp/tags.scm	/^(define fxreverse-bit-field 0)$/;"	f	language:Scheme
fxrotate-bit-field	/tmp/tags.scm	/^(define fxrotate-bit-field 0)$/;"	f	language:Scheme
fxsll	/tmp/tags.scm	/^(define fxsll 0)$/;"	f	language:Scheme
fxsra	/tmp/tags.scm	/^(define fxsra 0)$/;"	f	language:Scheme
fxsrl	/tmp/tags.scm	/^(define fxsrl 0)$/;"	f	language:Scheme
fxvector	/tmp/tags.scm	/^(define fxvector 0)$/;"	f	language:Scheme
fxvector->immutable-fxvector	/tmp/tags.scm	/^(define fxvector->immutable-fxvector 0)$/;"	f	language:Scheme
fxvector->list	/tmp/tags.scm	/^(define fxvector->list 0)$/;"	f	language:Scheme
fxvector-copy	/tmp/tags.scm	/^(define fxvector-copy 0)$/;"	f	language:Scheme
fxvector-fill!	/tmp/tags.scm	/^(define fxvector-fill! 0)$/;"	f	language:Scheme
fxvector-length	/tmp/tags.scm	/^(define fxvector-length 0)$/;"	f	language:Scheme
fxvector-ref	/tmp/tags.scm	/^(define fxvector-ref 0)$/;"	f	language:Scheme
fxvector-set!	/tmp/tags.scm	/^(define fxvector-set! 0)$/;"	f	language:Scheme
fxvector?	/tmp/tags.scm	/^(define fxvector? 0)$/;"	f	language:Scheme
fxxor	/tmp/tags.scm	/^(define fxxor 0)$/;"	f	language:Scheme
fxzero?	/tmp/tags.scm	/^(define fxzero? 0)$/;"	f	language:Scheme
gcd	/tmp/tags.scm	/^(define gcd 0)$/;"	f	language:Scheme
generate-allocation-counts	/tmp/tags.scm	/^(define generate-allocation-counts 0)$/;"	f	language:Scheme
generate-inspector-information	/tmp/tags.scm	/^(define generate-inspector-information 0)$/;"	f	language:Scheme
generate-instruction-counts	/tmp/tags.scm	/^(define generate-instruction-counts 0)$/;"	f	language:Scheme
generate-interrupt-trap	/tmp/tags.scm	/^(define generate-interrupt-trap 0)$/;"	f	language:Scheme
generate-procedure-source-information	/tmp/tags.scm	/^(define generate-procedure-source-information 0)$/;"	f	language:Scheme
generate-profile-forms	/tmp/tags.scm	/^(define generate-profile-forms 0)$/;"	f	language:Scheme
generate-temporaries	/tmp/tags.scm	/^(define generate-temporaries 0)$/;"	f	language:Scheme
generate-wpo-files	/tmp/tags.scm	/^(define generate-wpo-files 0)$/;"	f	language:Scheme
gensym	/tmp/tags.scm	/^(define gensym 0)$/;"	f	language:Scheme
gensym->unique-string	/tmp/tags.scm	/^(define gensym->unique-string 0)$/;"	f	language:Scheme
gensym-count	/tmp/tags.scm	/^(define gensym-count 0)$/;"	f	language:Scheme
gensym-prefix	/tmp/tags.scm	/^(define gensym-prefix 0)$/;"	f	language:Scheme
gensym?	/tmp/tags.scm	/^(define gensym? 0)$/;"	f	language:Scheme
get	/tmp/tags.scm	/^(define get 0)$/;"	f	language:Scheme
get-bytevector-all	/tmp/tags.scm	/^(define get-bytevector-all 0)$/;"	f	language:Scheme
get-bytevector-n	/tmp/tags.scm	/^(define get-bytevector-n 0)$/;"	f	language:Scheme
get-bytevector-n!	/tmp/tags.scm	/^(define get-bytevector-n! 0)$/;"	f	language:Scheme
get-bytevector-some	/tmp/tags.scm	/^(define get-bytevector-some 0)$/;"	f	language:Scheme
get-bytevector-some!	/tmp/tags.scm	/^(define get-bytevector-some! 0)$/;"	f	language:Scheme
get-char	/tmp/tags.scm	/^(define get-char 0)$/;"	f	language:Scheme
get-datum	/tmp/tags.scm	/^(define get-datum 0)$/;"	f	language:Scheme
get-datum/annotations	/tmp/tags.scm	/^(define get-datum\/annotations 0)$/;"	f	language:Scheme
get-hash-table	/tmp/tags.scm	/^(define get-hash-table 0)$/;"	f	language:Scheme
get-line	/tmp/tags.scm	/^(define get-line 0)$/;"	f	language:Scheme
get-mode	/tmp/tags.scm	/^(define get-mode 0)$/;"	f	language:Scheme
get-output-string	/tmp/tags.scm	/^(define get-output-string 0)$/;"	f	language:Scheme
get-process-id	/tmp/tags.scm	/^(define get-process-id 0)$/;"	f	language:Scheme
get-string-all	/tmp/tags.scm	/^(define get-string-all 0)$/;"	f	language:Scheme
get-string-n	/tmp/tags.scm	/^(define get-string-n 0)$/;"	f	language:Scheme
get-string-n!	/tmp/tags.scm	/^(define get-string-n! 0)$/;"	f	language:Scheme
get-string-some	/tmp/tags.scm	/^(define get-string-some 0)$/;"	f	language:Scheme
get-string-some!	/tmp/tags.scm	/^(define get-string-some! 0)$/;"	f	language:Scheme
get-thread-id	/tmp/tags.scm	/^(define get-thread-id 0)$/;"	f	language:Scheme
get-u8	/tmp/tags.scm	/^(define get-u8 0)$/;"	f	language:Scheme
getenv	/tmp/tags.scm	/^(define getenv 0)$/;"	f	language:Scheme
getprop	/tmp/tags.scm	/^(define getprop 0)$/;"	f	language:Scheme
global-value	/tmp/tags.scm	/^(define global-value 0)$/;"	f	language:Scheme
greatest-fixnum	/tmp/tags.scm	/^(define greatest-fixnum 0)$/;"	f	language:Scheme
guard	/tmp/tags.scm	/^(define guard 0)$/;"	f	language:Scheme
hash-table-exists?	/tmp/tags.scm	/^(define hash-table-exists? 0)$/;"	f	language:Scheme
hash-table-for-each	/tmp/tags.scm	/^(define hash-table-for-each 0)$/;"	f	language:Scheme
hash-table-keys	/tmp/tags.scm	/^(define hash-table-keys 0)$/;"	f	language:Scheme
hash-table-map	/tmp/tags.scm	/^(define hash-table-map 0)$/;"	f	language:Scheme
hash-table-ref	/tmp/tags.scm	/^(define hash-table-ref 0)$/;"	f	language:Scheme
hash-table-set!	/tmp/tags.scm	/^(define hash-table-set! 0)$/;"	f	language:Scheme
hash-table?	/tmp/tags.scm	/^(define hash-table? 0)$/;"	f	language:Scheme
hashtable-cell	/tmp/tags.scm	/^(define hashtable-cell 0)$/;"	f	language:Scheme
hashtable-clear!	/tmp/tags.scm	/^(define hashtable-clear! 0)$/;"	f	language:Scheme
hashtable-contains?	/tmp/tags.scm	/^(define hashtable-contains? 0)$/;"	f	language:Scheme
hashtable-copy	/tmp/tags.scm	/^(define hashtable-copy 0)$/;"	f	language:Scheme
hashtable-delete!	/tmp/tags.scm	/^(define hashtable-delete! 0)$/;"	f	language:Scheme
hashtable-entries	/tmp/tags.scm	/^(define hashtable-entries 0)$/;"	f	language:Scheme
hashtable-ephemeron?	/tmp/tags.scm	/^(define hashtable-ephemeron? 0)$/;"	f	language:Scheme
hashtable-equivalence-function	/tmp/tags.scm	/^(define hashtable-equivalence-function 0)$/;"	f	language:Scheme
hashtable-hash-function	/tmp/tags.scm	/^(define hashtable-hash-function 0)$/;"	f	language:Scheme
hashtable-keys	/tmp/tags.scm	/^(define hashtable-keys 0)$/;"	f	language:Scheme
hashtable-mutable?	/tmp/tags.scm	/^(define hashtable-mutable? 0)$/;"	f	language:Scheme
hashtable-ref	/tmp/tags.scm	/^(define hashtable-ref 0)$/;"	f	language:Scheme
hashtable-set!	/tmp/tags.scm	/^(define hashtable-set! 0)$/;"	f	language:Scheme
hashtable-size	/tmp/tags.scm	/^(define hashtable-size 0)$/;"	f	language:Scheme
hashtable-update!	/tmp/tags.scm	/^(define hashtable-update! 0)$/;"	f	language:Scheme
hashtable-values	/tmp/tags.scm	/^(define hashtable-values 0)$/;"	f	language:Scheme
hashtable-weak?	/tmp/tags.scm	/^(define hashtable-weak? 0)$/;"	f	language:Scheme
hashtable?	/tmp/tags.scm	/^(define hashtable? 0)$/;"	f	language:Scheme
heap-reserve-ratio	/tmp/tags.scm	/^(define heap-reserve-ratio 0)$/;"	f	language:Scheme
i/o-decoding-error?	/tmp/tags.scm	/^(define i\/o-decoding-error? 0)$/;"	f	language:Scheme
i/o-encoding-error-char	/tmp/tags.scm	/^(define i\/o-encoding-error-char 0)$/;"	f	language:Scheme
i/o-encoding-error?	/tmp/tags.scm	/^(define i\/o-encoding-error? 0)$/;"	f	language:Scheme
i/o-error-filename	/tmp/tags.scm	/^(define i\/o-error-filename 0)$/;"	f	language:Scheme
i/o-error-port	/tmp/tags.scm	/^(define i\/o-error-port 0)$/;"	f	language:Scheme
i/o-error-position	/tmp/tags.scm	/^(define i\/o-error-position 0)$/;"	f	language:Scheme
i/o-error?	/tmp/tags.scm	/^(define i\/o-error? 0)$/;"	f	language:Scheme
i/o-file-already-exists-error?	/tmp/tags.scm	/^(define i\/o-file-already-exists-error? 0)$/;"	f	language:Scheme
i/o-file-does-not-exist-error?	/tmp/tags.scm	/^(define i\/o-file-does-not-exist-error? 0)$/;"	f	language:Scheme
i/o-file-is-read-only-error?	/tmp/tags.scm	/^(define i\/o-file-is-read-only-error? 0)$/;"	f	language:Scheme
i/o-file-protection-error?	/tmp/tags.scm	/^(define i\/o-file-protection-error? 0)$/;"	f	language:Scheme
i/o-filename-error?	/tmp/tags.scm	/^(define i\/o-filename-error? 0)$/;"	f	language:Scheme
i/o-invalid-position-error?	/tmp/tags.scm	/^(define i\/o-invalid-position-error? 0)$/;"	f	language:Scheme
i/o-port-error?	/tmp/tags.scm	/^(define i\/o-port-error? 0)$/;"	f	language:Scheme
i/o-read-error?	/tmp/tags.scm	/^(define i\/o-read-error? 0)$/;"	f	language:Scheme
i/o-write-error?	/tmp/tags.scm	/^(define i\/o-write-error? 0)$/;"	f	language:Scheme
iconv-codec	/tmp/tags.scm	/^(define iconv-codec 0)$/;"	f	language:Scheme
identifier-syntax	/tmp/tags.scm	/^(define identifier-syntax 0)$/;"	f	language:Scheme
identifier?	/tmp/tags.scm	/^(define identifier? 0)$/;"	f	language:Scheme
ieee	/tmp/tags.scm	/^(define ieee 0)$/;"	f	language:Scheme
ieee-environment	/tmp/tags.scm	/^(define ieee-environment 0)$/;"	f	language:Scheme
if	/tmp/tags.scm	/^(define if 0)$/;"	f	language:Scheme
imag-part	/tmp/tags.scm	/^(define imag-part 0)$/;"	f	language:Scheme
immutable	/tmp/tags.scm	/^(define immutable 0)$/;"	f	language:Scheme
immutable-box?	/tmp/tags.scm	/^(define immutable-box? 0)$/;"	f	language:Scheme
immutable-bytevector?	/tmp/tags.scm	/^(define immutable-bytevector? 0)$/;"	f	language:Scheme
immutable-fxvector?	/tmp/tags.scm	/^(define immutable-fxvector? 0)$/;"	f	language:Scheme
immutable-string?	/tmp/tags.scm	/^(define immutable-string? 0)$/;"	f	language:Scheme
immutable-vector?	/tmp/tags.scm	/^(define immutable-vector? 0)$/;"	f	language:Scheme
implementation-restriction-violation?	/tmp/tags.scm	/^(define implementation-restriction-violation? 0)$/;"	f	language:Scheme
implicit-exports	/tmp/tags.scm	/^(define implicit-exports 0)$/;"	f	language:Scheme
import	/tmp/tags.scm	/^(define import 0)$/;"	f	language:Scheme
import-notify	/tmp/tags.scm	/^(define import-notify 0)$/;"	f	language:Scheme
import-only	/tmp/tags.scm	/^(define import-only 0)$/;"	f	language:Scheme
include	/tmp/tags.scm	/^(define include 0)$/;"	f	language:Scheme
ind	/tmp/tags.scm	/^(define ind 0)$/;"	f	language:Scheme
indirect-export	/tmp/tags.scm	/^(define indirect-export 0)$/;"	f	language:Scheme
inexact	/tmp/tags.scm	/^(define inexact 0)$/;"	f	language:Scheme
inexact->exact	/tmp/tags.scm	/^(define inexact->exact 0)$/;"	f	language:Scheme
inexact?	/tmp/tags.scm	/^(define inexact? 0)$/;"	f	language:Scheme
infinite?	/tmp/tags.scm	/^(define infinite? 0)$/;"	f	language:Scheme
initial-bytes-allocated	/tmp/tags.scm	/^(define initial-bytes-allocated 0)$/;"	f	language:Scheme
input-port-ready?	/tmp/tags.scm	/^(define input-port-ready? 0)$/;"	f	language:Scheme
input-port?	/tmp/tags.scm	/^(define input-port? 0)$/;"	f	language:Scheme
inspect	/tmp/tags.scm	/^(define inspect 0)$/;"	f	language:Scheme
inspect/object	/tmp/tags.scm	/^(define inspect\/object 0)$/;"	f	language:Scheme
integer->char	/tmp/tags.scm	/^(define integer->char 0)$/;"	f	language:Scheme
integer-length	/tmp/tags.scm	/^(define integer-length 0)$/;"	f	language:Scheme
integer-valued?	/tmp/tags.scm	/^(define integer-valued? 0)$/;"	f	language:Scheme
integer?	/tmp/tags.scm	/^(define integer? 0)$/;"	f	language:Scheme
interaction-environment	/tmp/tags.scm	/^(define interaction-environment 0)$/;"	f	language:Scheme
interactive?	/tmp/tags.scm	/^(define interactive? 0)$/;"	f	language:Scheme
intern	/tmp/tags.scm	/^(define intern 0)$/;"	f	language:Scheme
internal-defines-as-letrec*	/tmp/tags.scm	/^(define internal-defines-as-letrec* 0)$/;"	f	language:Scheme
interpret	/tmp/tags.scm	/^(define interpret 0)$/;"	f	language:Scheme
iota	/tmp/tags.scm	/^(define iota 0)$/;"	f	language:Scheme
ir-macro-transformer	/tmp/tags.scm	/^(define ir-macro-transformer 0)$/;"	f	language:Scheme
irritants-condition?	/tmp/tags.scm	/^(define irritants-condition? 0)$/;"	f	language:Scheme
isqrt	/tmp/tags.scm	/^(define isqrt 0)$/;"	f	language:Scheme
keyboard-interrupt-handler	/tmp/tags.scm	/^(define keyboard-interrupt-handler 0)$/;"	f	language:Scheme
lambda	/tmp/tags.scm	/^(define lambda 0)$/;"	f	language:Scheme
last-pair	/tmp/tags.scm	/^(define last-pair 0)$/;"	f	language:Scheme
latin-1-codec	/tmp/tags.scm	/^(define latin-1-codec 0)$/;"	f	language:Scheme
lcm	/tmp/tags.scm	/^(define lcm 0)$/;"	f	language:Scheme
least-fixnum	/tmp/tags.scm	/^(define least-fixnum 0)$/;"	f	language:Scheme
length	/tmp/tags.scm	/^(define length 0)$/;"	f	language:Scheme
let	/tmp/tags.scm	/^(define let 0)$/;"	f	language:Scheme
let*	/tmp/tags.scm	/^(define let* 0)$/;"	f	language:Scheme
let*-values	/tmp/tags.scm	/^(define let*-values 0)$/;"	f	language:Scheme
let-syntax	/tmp/tags.scm	/^(define let-syntax 0)$/;"	f	language:Scheme
let-values	/tmp/tags.scm	/^(define let-values 0)$/;"	f	language:Scheme
letrec	/tmp/tags.scm	/^(define letrec 0)$/;"	f	language:Scheme
letrec*	/tmp/tags.scm	/^(define letrec* 0)$/;"	f	language:Scheme
letrec-syntax	/tmp/tags.scm	/^(define letrec-syntax 0)$/;"	f	language:Scheme
lexical-violation?	/tmp/tags.scm	/^(define lexical-violation? 0)$/;"	f	language:Scheme
library	/tmp/tags.scm	/^(define library 0)$/;"	f	language:Scheme
library-directories	/tmp/tags.scm	/^(define library-directories 0)$/;"	f	language:Scheme
library-exports	/tmp/tags.scm	/^(define library-exports 0)$/;"	f	language:Scheme
library-extensions	/tmp/tags.scm	/^(define library-extensions 0)$/;"	f	language:Scheme
library-list	/tmp/tags.scm	/^(define library-list 0)$/;"	f	language:Scheme
library-object-filename	/tmp/tags.scm	/^(define library-object-filename 0)$/;"	f	language:Scheme
library-requirements	/tmp/tags.scm	/^(define library-requirements 0)$/;"	f	language:Scheme
library-requirements-options	/tmp/tags.scm	/^(define library-requirements-options 0)$/;"	f	language:Scheme
library-version	/tmp/tags.scm	/^(define library-version 0)$/;"	f	language:Scheme
list	/tmp/tags.scm	/^(define list 0)$/;"	f	language:Scheme
list*	/tmp/tags.scm	/^(define list* 0)$/;"	f	language:Scheme
list->fxvector	/tmp/tags.scm	/^(define list->fxvector 0)$/;"	f	language:Scheme
list->string	/tmp/tags.scm	/^(define list->string 0)$/;"	f	language:Scheme
list->vector	/tmp/tags.scm	/^(define list->vector 0)$/;"	f	language:Scheme
list-copy	/tmp/tags.scm	/^(define list-copy 0)$/;"	f	language:Scheme
list-head	/tmp/tags.scm	/^(define list-head 0)$/;"	f	language:Scheme
list-ref	/tmp/tags.scm	/^(define list-ref 0)$/;"	f	language:Scheme
list-sort	/tmp/tags.scm	/^(define list-sort 0)$/;"	f	language:Scheme
list-tail	/tmp/tags.scm	/^(define list-tail 0)$/;"	f	language:Scheme
list?	/tmp/tags.scm	/^(define list? 0)$/;"	f	language:Scheme
literal-identifier=?	/tmp/tags.scm	/^(define literal-identifier=? 0)$/;"	f	language:Scheme
load	/tmp/tags.scm	/^(define load 0)$/;"	f	language:Scheme
load-compiled-from-port	/tmp/tags.scm	/^(define load-compiled-from-port 0)$/;"	f	language:Scheme
load-library	/tmp/tags.scm	/^(define load-library 0)$/;"	f	language:Scheme
load-program	/tmp/tags.scm	/^(define load-program 0)$/;"	f	language:Scheme
load-shared-object	/tmp/tags.scm	/^(define load-shared-object 0)$/;"	f	language:Scheme
locate-source	/tmp/tags.scm	/^(define locate-source 0)$/;"	f	language:Scheme
locate-source-object-source	/tmp/tags.scm	/^(define locate-source-object-source 0)$/;"	f	language:Scheme
lock-object	/tmp/tags.scm	/^(define lock-object 0)$/;"	f	language:Scheme
locked-object?	/tmp/tags.scm	/^(define locked-object? 0)$/;"	f	language:Scheme
log	/tmp/tags.scm	/^(define log 0)$/;"	f	language:Scheme
logand	/tmp/tags.scm	/^(define logand 0)$/;"	f	language:Scheme
logbit0	/tmp/tags.scm	/^(define logbit0 0)$/;"	f	language:Scheme
logbit1	/tmp/tags.scm	/^(define logbit1 0)$/;"	f	language:Scheme
logbit?	/tmp/tags.scm	/^(define logbit? 0)$/;"	f	language:Scheme
logior	/tmp/tags.scm	/^(define logior 0)$/;"	f	language:Scheme
lognot	/tmp/tags.scm	/^(define lognot 0)$/;"	f	language:Scheme
logor	/tmp/tags.scm	/^(define logor 0)$/;"	f	language:Scheme
logtest	/tmp/tags.scm	/^(define logtest 0)$/;"	f	language:Scheme
logxor	/tmp/tags.scm	/^(define logxor 0)$/;"	f	language:Scheme
lookahead-char	/tmp/tags.scm	/^(define lookahead-char 0)$/;"	f	language:Scheme
lookahead-u8	/tmp/tags.scm	/^(define lookahead-u8 0)$/;"	f	language:Scheme
machine-type	/tmp/tags.scm	/^(define machine-type 0)$/;"	f	language:Scheme
macro-expand	/tmp/tags.scm	/^(define macro-expand 0)$/;"	f	language:Scheme
magnitude	/tmp/tags.scm	/^(define magnitude 0)$/;"	f	language:Scheme
magnitude-squared	/tmp/tags.scm	/^(define magnitude-squared 0)$/;"	f	language:Scheme
make-annotation	/tmp/tags.scm	/^(define make-annotation 0)$/;"	f	language:Scheme
make-assertion-violation	/tmp/tags.scm	/^(define make-assertion-violation 0)$/;"	f	language:Scheme
make-boot-file	/tmp/tags.scm	/^(define make-boot-file 0)$/;"	f	language:Scheme
make-boot-header	/tmp/tags.scm	/^(define make-boot-header 0)$/;"	f	language:Scheme
make-bytevector	/tmp/tags.scm	/^(define make-bytevector 0)$/;"	f	language:Scheme
make-compile-time-value	/tmp/tags.scm	/^(define make-compile-time-value 0)$/;"	f	language:Scheme
make-continuation-condition	/tmp/tags.scm	/^(define make-continuation-condition 0)$/;"	f	language:Scheme
make-cost-center	/tmp/tags.scm	/^(define make-cost-center 0)$/;"	f	language:Scheme
make-custom-binary-input-port	/tmp/tags.scm	/^(define make-custom-binary-input-port 0)$/;"	f	language:Scheme
make-custom-binary-input/output-port	/tmp/tags.scm	/^(define make-custom-binary-input\/output-port 0)$/;"	f	language:Scheme
make-custom-binary-output-port	/tmp/tags.scm	/^(define make-custom-binary-output-port 0)$/;"	f	language:Scheme
make-custom-textual-input-port	/tmp/tags.scm	/^(define make-custom-textual-input-port 0)$/;"	f	language:Scheme
make-custom-textual-input/output-port	/tmp/tags.scm	/^(define make-custom-textual-input\/output-port 0)$/;"	f	language:Scheme
make-custom-textual-output-port	/tmp/tags.scm	/^(define make-custom-textual-output-port 0)$/;"	f	language:Scheme
make-date	/tmp/tags.scm	/^(define make-date 0)$/;"	f	language:Scheme
make-engine	/tmp/tags.scm	/^(define make-engine 0)$/;"	f	language:Scheme
make-enumeration	/tmp/tags.scm	/^(define make-enumeration 0)$/;"	f	language:Scheme
make-ephemeron-eq-hashtable	/tmp/tags.scm	/^(define make-ephemeron-eq-hashtable 0)$/;"	f	language:Scheme
make-ephemeron-eqv-hashtable	/tmp/tags.scm	/^(define make-ephemeron-eqv-hashtable 0)$/;"	f	language:Scheme
make-eq-hashtable	/tmp/tags.scm	/^(define make-eq-hashtable 0)$/;"	f	language:Scheme
make-eqv-hashtable	/tmp/tags.scm	/^(define make-eqv-hashtable 0)$/;"	f	language:Scheme
make-error	/tmp/tags.scm	/^(define make-error 0)$/;"	f	language:Scheme
make-format-condition	/tmp/tags.scm	/^(define make-format-condition 0)$/;"	f	language:Scheme
make-ftype-pointer	/tmp/tags.scm	/^(define make-ftype-pointer 0)$/;"	f	language:Scheme
make-fxvector	/tmp/tags.scm	/^(define make-fxvector 0)$/;"	f	language:Scheme
make-guardian	/tmp/tags.scm	/^(define make-guardian 0)$/;"	f	language:Scheme
make-hash-table	/tmp/tags.scm	/^(define make-hash-table 0)$/;"	f	language:Scheme
make-hashtable	/tmp/tags.scm	/^(define make-hashtable 0)$/;"	f	language:Scheme
make-i/o-decoding-error	/tmp/tags.scm	/^(define make-i\/o-decoding-error 0)$/;"	f	language:Scheme
make-i/o-encoding-error	/tmp/tags.scm	/^(define make-i\/o-encoding-error 0)$/;"	f	language:Scheme
make-i/o-error	/tmp/tags.scm	/^(define make-i\/o-error 0)$/;"	f	language:Scheme
make-i/o-file-already-exists-error	/tmp/tags.scm	/^(define make-i\/o-file-already-exists-error 0)$/;"	f	language:Scheme
make-i/o-file-does-not-exist-error	/tmp/tags.scm	/^(define make-i\/o-file-does-not-exist-error 0)$/;"	f	language:Scheme
make-i/o-file-is-read-only-error	/tmp/tags.scm	/^(define make-i\/o-file-is-read-only-error 0)$/;"	f	language:Scheme
make-i/o-file-protection-error	/tmp/tags.scm	/^(define make-i\/o-file-protection-error 0)$/;"	f	language:Scheme
make-i/o-filename-error	/tmp/tags.scm	/^(define make-i\/o-filename-error 0)$/;"	f	language:Scheme
make-i/o-invalid-position-error	/tmp/tags.scm	/^(define make-i\/o-invalid-position-error 0)$/;"	f	language:Scheme
make-i/o-port-error	/tmp/tags.scm	/^(define make-i\/o-port-error 0)$/;"	f	language:Scheme
make-i/o-read-error	/tmp/tags.scm	/^(define make-i\/o-read-error 0)$/;"	f	language:Scheme
make-i/o-write-error	/tmp/tags.scm	/^(define make-i\/o-write-error 0)$/;"	f	language:Scheme
make-implementation-restriction-violation	/tmp/tags.scm	/^(define make-implementation-restriction-violation 0)$/;"	f	language:Scheme
make-input-port	/tmp/tags.scm	/^(define make-input-port 0)$/;"	f	language:Scheme
make-input/output-port	/tmp/tags.scm	/^(define make-input\/output-port 0)$/;"	f	language:Scheme
make-irritants-condition	/tmp/tags.scm	/^(define make-irritants-condition 0)$/;"	f	language:Scheme
make-lexical-violation	/tmp/tags.scm	/^(define make-lexical-violation 0)$/;"	f	language:Scheme
make-list	/tmp/tags.scm	/^(define make-list 0)$/;"	f	language:Scheme
make-message-condition	/tmp/tags.scm	/^(define make-message-condition 0)$/;"	f	language:Scheme
make-no-infinities-violation	/tmp/tags.scm	/^(define make-no-infinities-violation 0)$/;"	f	language:Scheme
make-no-nans-violation	/tmp/tags.scm	/^(define make-no-nans-violation 0)$/;"	f	language:Scheme
make-non-continuable-violation	/tmp/tags.scm	/^(define make-non-continuable-violation 0)$/;"	f	language:Scheme
make-object-finder	/tmp/tags.scm	/^(define make-object-finder 0)$/;"	f	language:Scheme
make-output-port	/tmp/tags.scm	/^(define make-output-port 0)$/;"	f	language:Scheme
make-parameter	/tmp/tags.scm	/^(define make-parameter 0)$/;"	f	language:Scheme
make-polar	/tmp/tags.scm	/^(define make-polar 0)$/;"	f	language:Scheme
make-record-constructor-descriptor	/tmp/tags.scm	/^(define make-record-constructor-descriptor 0)$/;"	f	language:Scheme
make-record-type	/tmp/tags.scm	/^(define make-record-type 0)$/;"	f	language:Scheme
make-record-type-descriptor	/tmp/tags.scm	/^(define make-record-type-descriptor 0)$/;"	f	language:Scheme
make-rectangular	/tmp/tags.scm	/^(define make-rectangular 0)$/;"	f	language:Scheme
make-serious-condition	/tmp/tags.scm	/^(define make-serious-condition 0)$/;"	f	language:Scheme
make-source-condition	/tmp/tags.scm	/^(define make-source-condition 0)$/;"	f	language:Scheme
make-source-file-descriptor	/tmp/tags.scm	/^(define make-source-file-descriptor 0)$/;"	f	language:Scheme
make-source-object	/tmp/tags.scm	/^(define make-source-object 0)$/;"	f	language:Scheme
make-sstats	/tmp/tags.scm	/^(define make-sstats 0)$/;"	f	language:Scheme
make-string	/tmp/tags.scm	/^(define make-string 0)$/;"	f	language:Scheme
make-syntax-violation	/tmp/tags.scm	/^(define make-syntax-violation 0)$/;"	f	language:Scheme
make-temp-symbol	/tmp/tags.scm	/^(define make-temp-symbol 0)$/;"	f	language:Scheme
make-time	/tmp/tags.scm	/^(define make-time 0)$/;"	f	language:Scheme
make-transcoder	/tmp/tags.scm	/^(define make-transcoder 0)$/;"	f	language:Scheme
make-undefined-violation	/tmp/tags.scm	/^(define make-undefined-violation 0)$/;"	f	language:Scheme
make-variable-transformer	/tmp/tags.scm	/^(define make-variable-transformer 0)$/;"	f	language:Scheme
make-vector	/tmp/tags.scm	/^(define make-vector 0)$/;"	f	language:Scheme
make-violation	/tmp/tags.scm	/^(define make-violation 0)$/;"	f	language:Scheme
make-warning	/tmp/tags.scm	/^(define make-warning 0)$/;"	f	language:Scheme
make-weak-eq-hashtable	/tmp/tags.scm	/^(define make-weak-eq-hashtable 0)$/;"	f	language:Scheme
make-weak-eqv-hashtable	/tmp/tags.scm	/^(define make-weak-eqv-hashtable 0)$/;"	f	language:Scheme
make-who-condition	/tmp/tags.scm	/^(define make-who-condition 0)$/;"	f	language:Scheme
map	/tmp/tags.scm	/^(define map 0)$/;"	f	language:Scheme
mapc	/tmp/tags.scm	/^(define mapc 0)$/;"	f	language:Scheme
mapcar	/tmp/tags.scm	/^(define mapcar 0)$/;"	f	language:Scheme
mark-port-closed!	/tmp/tags.scm	/^(define mark-port-closed! 0)$/;"	f	language:Scheme
max	/tmp/tags.scm	/^(define max 0)$/;"	f	language:Scheme
maximum-memory-bytes	/tmp/tags.scm	/^(define maximum-memory-bytes 0)$/;"	f	language:Scheme
maybe-compile-file	/tmp/tags.scm	/^(define maybe-compile-file 0)$/;"	f	language:Scheme
maybe-compile-library	/tmp/tags.scm	/^(define maybe-compile-library 0)$/;"	f	language:Scheme
maybe-compile-program	/tmp/tags.scm	/^(define maybe-compile-program 0)$/;"	f	language:Scheme
mem	/tmp/tags.scm	/^(define mem 0)$/;"	f	language:Scheme
member	/tmp/tags.scm	/^(define member 0)$/;"	f	language:Scheme
memp	/tmp/tags.scm	/^(define memp 0)$/;"	f	language:Scheme
memq	/tmp/tags.scm	/^(define memq 0)$/;"	f	language:Scheme
memv	/tmp/tags.scm	/^(define memv 0)$/;"	f	language:Scheme
merge	/tmp/tags.scm	/^(define merge 0)$/;"	f	language:Scheme
merge!	/tmp/tags.scm	/^(define merge! 0)$/;"	f	language:Scheme
message-condition?	/tmp/tags.scm	/^(define message-condition? 0)$/;"	f	language:Scheme
meta	/tmp/tags.scm	/^(define meta 0)$/;"	f	language:Scheme
meta-cond	/tmp/tags.scm	/^(define meta-cond 0)$/;"	f	language:Scheme
min	/tmp/tags.scm	/^(define min 0)$/;"	f	language:Scheme
mkdir	/tmp/tags.scm	/^(define mkdir 0)$/;"	f	language:Scheme
mod	/tmp/tags.scm	/^(define mod 0)$/;"	f	language:Scheme
mod0	/tmp/tags.scm	/^(define mod0 0)$/;"	f	language:Scheme
module	/tmp/tags.scm	/^(define module 0)$/;"	f	language:Scheme
modulo	/tmp/tags.scm	/^(define modulo 0)$/;"	f	language:Scheme
most-negative-fixnum	/tmp/tags.scm	/^(define most-negative-fixnum 0)$/;"	f	language:Scheme
most-positive-fixnum	/tmp/tags.scm	/^(define most-positive-fixnum 0)$/;"	f	language:Scheme
mutable	/tmp/tags.scm	/^(define mutable 0)$/;"	f	language:Scheme
mutable-box?	/tmp/tags.scm	/^(define mutable-box? 0)$/;"	f	language:Scheme
mutable-bytevector?	/tmp/tags.scm	/^(define mutable-bytevector? 0)$/;"	f	language:Scheme
mutable-fxvector?	/tmp/tags.scm	/^(define mutable-fxvector? 0)$/;"	f	language:Scheme
mutable-string?	/tmp/tags.scm	/^(define mutable-string? 0)$/;"	f	language:Scheme
mutable-vector?	/tmp/tags.scm	/^(define mutable-vector? 0)$/;"	f	language:Scheme
nan?	/tmp/tags.scm	/^(define nan? 0)$/;"	f	language:Scheme
native-endianness	/tmp/tags.scm	/^(define native-endianness 0)$/;"	f	language:Scheme
native-eol-style	/tmp/tags.scm	/^(define native-eol-style 0)$/;"	f	language:Scheme
native-transcoder	/tmp/tags.scm	/^(define native-transcoder 0)$/;"	f	language:Scheme
negative?	/tmp/tags.scm	/^(define negative? 0)$/;"	f	language:Scheme
new-cafe	/tmp/tags.scm	/^(define new-cafe 0)$/;"	f	language:Scheme
newline	/tmp/tags.scm	/^(define newline 0)$/;"	f	language:Scheme
nil	/tmp/tags.scm	/^(define nil 0)$/;"	f	language:Scheme
no-infinities-violation?	/tmp/tags.scm	/^(define no-infinities-violation? 0)$/;"	f	language:Scheme
no-nans-violation?	/tmp/tags.scm	/^(define no-nans-violation? 0)$/;"	f	language:Scheme
non-continuable-violation?	/tmp/tags.scm	/^(define non-continuable-violation? 0)$/;"	f	language:Scheme
nongenerative	/tmp/tags.scm	/^(define nongenerative 0)$/;"	f	language:Scheme
nonnegative?	/tmp/tags.scm	/^(define nonnegative? 0)$/;"	f	language:Scheme
nonpositive?	/tmp/tags.scm	/^(define nonpositive? 0)$/;"	f	language:Scheme
not	/tmp/tags.scm	/^(define not 0)$/;"	f	language:Scheme
null-environment	/tmp/tags.scm	/^(define null-environment 0)$/;"	f	language:Scheme
null?	/tmp/tags.scm	/^(define null? 0)$/;"	f	language:Scheme
number->string	/tmp/tags.scm	/^(define number->string 0)$/;"	f	language:Scheme
number?	/tmp/tags.scm	/^(define number? 0)$/;"	f	language:Scheme
numerator	/tmp/tags.scm	/^(define numerator 0)$/;"	f	language:Scheme
object-counts	/tmp/tags.scm	/^(define object-counts 0)$/;"	f	language:Scheme
oblist	/tmp/tags.scm	/^(define oblist 0)$/;"	f	language:Scheme
odd?	/tmp/tags.scm	/^(define odd? 0)$/;"	f	language:Scheme
only	/tmp/tags.scm	/^(define only 0)$/;"	f	language:Scheme
opaque	/tmp/tags.scm	/^(define opaque 0)$/;"	f	language:Scheme
open-bytevector-input-port	/tmp/tags.scm	/^(define open-bytevector-input-port 0)$/;"	f	language:Scheme
open-bytevector-output-port	/tmp/tags.scm	/^(define open-bytevector-output-port 0)$/;"	f	language:Scheme
open-fd-input-port	/tmp/tags.scm	/^(define open-fd-input-port 0)$/;"	f	language:Scheme
open-fd-input/output-port	/tmp/tags.scm	/^(define open-fd-input\/output-port 0)$/;"	f	language:Scheme
open-fd-output-port	/tmp/tags.scm	/^(define open-fd-output-port 0)$/;"	f	language:Scheme
open-file-input-port	/tmp/tags.scm	/^(define open-file-input-port 0)$/;"	f	language:Scheme
open-file-input/output-port	/tmp/tags.scm	/^(define open-file-input\/output-port 0)$/;"	f	language:Scheme
open-file-output-port	/tmp/tags.scm	/^(define open-file-output-port 0)$/;"	f	language:Scheme
open-input-file	/tmp/tags.scm	/^(define open-input-file 0)$/;"	f	language:Scheme
open-input-output-file	/tmp/tags.scm	/^(define open-input-output-file 0)$/;"	f	language:Scheme
open-input-string	/tmp/tags.scm	/^(define open-input-string 0)$/;"	f	language:Scheme
open-output-file	/tmp/tags.scm	/^(define open-output-file 0)$/;"	f	language:Scheme
open-output-string	/tmp/tags.scm	/^(define open-output-string 0)$/;"	f	language:Scheme
open-process-ports	/tmp/tags.scm	/^(define open-process-ports 0)$/;"	f	language:Scheme
open-source-file	/tmp/tags.scm	/^(define open-source-file 0)$/;"	f	language:Scheme
open-string-input-port	/tmp/tags.scm	/^(define open-string-input-port 0)$/;"	f	language:Scheme
open-string-output-port	/tmp/tags.scm	/^(define open-string-output-port 0)$/;"	f	language:Scheme
optimize-level	/tmp/tags.scm	/^(define optimize-level 0)$/;"	f	language:Scheme
or	/tmp/tags.scm	/^(define or 0)$/;"	f	language:Scheme
ormap	/tmp/tags.scm	/^(define ormap 0)$/;"	f	language:Scheme
output-port-buffer-mode	/tmp/tags.scm	/^(define output-port-buffer-mode 0)$/;"	f	language:Scheme
output-port?	/tmp/tags.scm	/^(define output-port? 0)$/;"	f	language:Scheme
pair?	/tmp/tags.scm	/^(define pair? 0)$/;"	f	language:Scheme
parameterize	/tmp/tags.scm	/^(define parameterize 0)$/;"	f	language:Scheme
parent	/tmp/tags.scm	/^(define parent 0)$/;"	f	language:Scheme
parent-rtd	/tmp/tags.scm	/^(define parent-rtd 0)$/;"	f	language:Scheme
pariah	/tmp/tags.scm	/^(define pariah 0)$/;"	f	language:Scheme
partition	/tmp/tags.scm	/^(define partition 0)$/;"	f	language:Scheme
path-absolute?	/tmp/tags.scm	/^(define path-absolute? 0)$/;"	f	language:Scheme
path-extension	/tmp/tags.scm	/^(define path-extension 0)$/;"	f	language:Scheme
path-first	/tmp/tags.scm	/^(define path-first 0)$/;"	f	language:Scheme
path-last	/tmp/tags.scm	/^(define path-last 0)$/;"	f	language:Scheme
path-parent	/tmp/tags.scm	/^(define path-parent 0)$/;"	f	language:Scheme
path-rest	/tmp/tags.scm	/^(define path-rest 0)$/;"	f	language:Scheme
path-root	/tmp/tags.scm	/^(define path-root 0)$/;"	f	language:Scheme
peek-char	/tmp/tags.scm	/^(define peek-char 0)$/;"	f	language:Scheme
petite?	/tmp/tags.scm	/^(define petite? 0)$/;"	f	language:Scheme
port->string	/tmp/tags.scm	/^(define port->string 0)$/;"	f	language:Scheme
port-bol?	/tmp/tags.scm	/^(define port-bol? 0)$/;"	f	language:Scheme
port-closed?	/tmp/tags.scm	/^(define port-closed? 0)$/;"	f	language:Scheme
port-eof?	/tmp/tags.scm	/^(define port-eof? 0)$/;"	f	language:Scheme
port-file-compressed!	/tmp/tags.scm	/^(define port-file-compressed! 0)$/;"	f	language:Scheme
port-file-descriptor	/tmp/tags.scm	/^(define port-file-descriptor 0)$/;"	f	language:Scheme
port-handler	/tmp/tags.scm	/^(define port-handler 0)$/;"	f	language:Scheme
port-has-port-length?	/tmp/tags.scm	/^(define port-has-port-length? 0)$/;"	f	language:Scheme
port-has-port-nonblocking??	/tmp/tags.scm	/^(define port-has-port-nonblocking?? 0)$/;"	f	language:Scheme
port-has-port-position?	/tmp/tags.scm	/^(define port-has-port-position? 0)$/;"	f	language:Scheme
port-has-set-port-length!?	/tmp/tags.scm	/^(define port-has-set-port-length!? 0)$/;"	f	language:Scheme
port-has-set-port-nonblocking!?	/tmp/tags.scm	/^(define port-has-set-port-nonblocking!? 0)$/;"	f	language:Scheme
port-has-set-port-position!?	/tmp/tags.scm	/^(define port-has-set-port-position!? 0)$/;"	f	language:Scheme
port-input-buffer	/tmp/tags.scm	/^(define port-input-buffer 0)$/;"	f	language:Scheme
port-input-count	/tmp/tags.scm	/^(define port-input-count 0)$/;"	f	language:Scheme
port-input-empty?	/tmp/tags.scm	/^(define port-input-empty? 0)$/;"	f	language:Scheme
port-input-index	/tmp/tags.scm	/^(define port-input-index 0)$/;"	f	language:Scheme
port-input-size	/tmp/tags.scm	/^(define port-input-size 0)$/;"	f	language:Scheme
port-length	/tmp/tags.scm	/^(define port-length 0)$/;"	f	language:Scheme
port-name	/tmp/tags.scm	/^(define port-name 0)$/;"	f	language:Scheme
port-nonblocking?	/tmp/tags.scm	/^(define port-nonblocking? 0)$/;"	f	language:Scheme
port-output-buffer	/tmp/tags.scm	/^(define port-output-buffer 0)$/;"	f	language:Scheme
port-output-count	/tmp/tags.scm	/^(define port-output-count 0)$/;"	f	language:Scheme
port-output-full?	/tmp/tags.scm	/^(define port-output-full? 0)$/;"	f	language:Scheme
port-output-index	/tmp/tags.scm	/^(define port-output-index 0)$/;"	f	language:Scheme
port-output-size	/tmp/tags.scm	/^(define port-output-size 0)$/;"	f	language:Scheme
port-position	/tmp/tags.scm	/^(define port-position 0)$/;"	f	language:Scheme
port-transcoder	/tmp/tags.scm	/^(define port-transcoder 0)$/;"	f	language:Scheme
port?	/tmp/tags.scm	/^(define port? 0)$/;"	f	language:Scheme
positive?	/tmp/tags.scm	/^(define positive? 0)$/;"	f	language:Scheme
predicate	/tmp/tags.scm	/^(define predicate 0)$/;"	f	language:Scheme
prefix	/tmp/tags.scm	/^(define prefix 0)$/;"	f	language:Scheme
pretty-file	/tmp/tags.scm	/^(define pretty-file 0)$/;"	f	language:Scheme
pretty-format	/tmp/tags.scm	/^(define pretty-format 0)$/;"	f	language:Scheme
pretty-initial-indent	/tmp/tags.scm	/^(define pretty-initial-indent 0)$/;"	f	language:Scheme
pretty-line-length	/tmp/tags.scm	/^(define pretty-line-length 0)$/;"	f	language:Scheme
pretty-maximum-lines	/tmp/tags.scm	/^(define pretty-maximum-lines 0)$/;"	f	language:Scheme
pretty-one-line-limit	/tmp/tags.scm	/^(define pretty-one-line-limit 0)$/;"	f	language:Scheme
pretty-print	/tmp/tags.scm	/^(define pretty-print 0)$/;"	f	language:Scheme
pretty-standard-indent	/tmp/tags.scm	/^(define pretty-standard-indent 0)$/;"	f	language:Scheme
print-brackets	/tmp/tags.scm	/^(define print-brackets 0)$/;"	f	language:Scheme
print-char-name	/tmp/tags.scm	/^(define print-char-name 0)$/;"	f	language:Scheme
print-extended-identifiers	/tmp/tags.scm	/^(define print-extended-identifiers 0)$/;"	f	language:Scheme
print-gensym	/tmp/tags.scm	/^(define print-gensym 0)$/;"	f	language:Scheme
print-graph	/tmp/tags.scm	/^(define print-graph 0)$/;"	f	language:Scheme
print-length	/tmp/tags.scm	/^(define print-length 0)$/;"	f	language:Scheme
print-level	/tmp/tags.scm	/^(define print-level 0)$/;"	f	language:Scheme
print-precision	/tmp/tags.scm	/^(define print-precision 0)$/;"	f	language:Scheme
print-radix	/tmp/tags.scm	/^(define print-radix 0)$/;"	f	language:Scheme
print-record	/tmp/tags.scm	/^(define print-record 0)$/;"	f	language:Scheme
print-unicode	/tmp/tags.scm	/^(define print-unicode 0)$/;"	f	language:Scheme
print-vector-length	/tmp/tags.scm	/^(define print-vector-length 0)$/;"	f	language:Scheme
printf	/tmp/tags.scm	/^(define printf 0)$/;"	f	language:Scheme
procedure-arity-mask	/tmp/tags.scm	/^(define procedure-arity-mask 0)$/;"	f	language:Scheme
procedure?	/tmp/tags.scm	/^(define procedure? 0)$/;"	f	language:Scheme
process	/tmp/tags.scm	/^(define process 0)$/;"	f	language:Scheme
profile	/tmp/tags.scm	/^(define profile 0)$/;"	f	language:Scheme
profile-clear	/tmp/tags.scm	/^(define profile-clear 0)$/;"	f	language:Scheme
profile-clear-database	/tmp/tags.scm	/^(define profile-clear-database 0)$/;"	f	language:Scheme
profile-dump	/tmp/tags.scm	/^(define profile-dump 0)$/;"	f	language:Scheme
profile-dump-data	/tmp/tags.scm	/^(define profile-dump-data 0)$/;"	f	language:Scheme
profile-dump-html	/tmp/tags.scm	/^(define profile-dump-html 0)$/;"	f	language:Scheme
profile-dump-list	/tmp/tags.scm	/^(define profile-dump-list 0)$/;"	f	language:Scheme
profile-line-number-color	/tmp/tags.scm	/^(define profile-line-number-color 0)$/;"	f	language:Scheme
profile-load-data	/tmp/tags.scm	/^(define profile-load-data 0)$/;"	f	language:Scheme
profile-palette	/tmp/tags.scm	/^(define profile-palette 0)$/;"	f	language:Scheme
profile-query-weight	/tmp/tags.scm	/^(define profile-query-weight 0)$/;"	f	language:Scheme
prompt-read	/tmp/tags.scm	/^(define prompt-read 0)$/;"	f	language:Scheme
property-list	/tmp/tags.scm	/^(define property-list 0)$/;"	f	language:Scheme
protocol	/tmp/tags.scm	/^(define protocol 0)$/;"	f	language:Scheme
put	/tmp/tags.scm	/^(define put 0)$/;"	f	language:Scheme
put-bytevector	/tmp/tags.scm	/^(define put-bytevector 0)$/;"	f	language:Scheme
put-bytevector-some	/tmp/tags.scm	/^(define put-bytevector-some 0)$/;"	f	language:Scheme
put-char	/tmp/tags.scm	/^(define put-char 0)$/;"	f	language:Scheme
put-datum	/tmp/tags.scm	/^(define put-datum 0)$/;"	f	language:Scheme
put-hash-table!	/tmp/tags.scm	/^(define put-hash-table! 0)$/;"	f	language:Scheme
put-string	/tmp/tags.scm	/^(define put-string 0)$/;"	f	language:Scheme
put-string-some	/tmp/tags.scm	/^(define put-string-some 0)$/;"	f	language:Scheme
put-u8	/tmp/tags.scm	/^(define put-u8 0)$/;"	f	language:Scheme
putenv	/tmp/tags.scm	/^(define putenv 0)$/;"	f	language:Scheme
putprop	/tmp/tags.scm	/^(define putprop 0)$/;"	f	language:Scheme
quasiquote	/tmp/tags.scm	/^(define quasiquote 0)$/;"	f	language:Scheme
quasisyntax	/tmp/tags.scm	/^(define quasisyntax 0)$/;"	f	language:Scheme
quote	/tmp/tags.scm	/^(define quote 0)$/;"	f	language:Scheme
quotient	/tmp/tags.scm	/^(define quotient 0)$/;"	f	language:Scheme
r5rs	/tmp/tags.scm	/^(define r5rs 0)$/;"	f	language:Scheme
r5rs-syntax	/tmp/tags.scm	/^(define r5rs-syntax 0)$/;"	f	language:Scheme
r6rs:<	/tmp/tags.scm	/^(define r6rs:< 0)$/;"	f	language:Scheme
r6rs:<=	/tmp/tags.scm	/^(define r6rs:<= 0)$/;"	f	language:Scheme
r6rs:=	/tmp/tags.scm	/^(define r6rs:= 0)$/;"	f	language:Scheme
r6rs:>	/tmp/tags.scm	/^(define r6rs:> 0)$/;"	f	language:Scheme
r6rs:>=	/tmp/tags.scm	/^(define r6rs:>= 0)$/;"	f	language:Scheme
r6rs:call-with-input-file	/tmp/tags.scm	/^(define r6rs:call-with-input-file 0)$/;"	f	language:Scheme
r6rs:call-with-output-file	/tmp/tags.scm	/^(define r6rs:call-with-output-file 0)$/;"	f	language:Scheme
r6rs:case	/tmp/tags.scm	/^(define r6rs:case 0)$/;"	f	language:Scheme
r6rs:char-ci<=?	/tmp/tags.scm	/^(define r6rs:char-ci<=? 0)$/;"	f	language:Scheme
r6rs:char-ci<?	/tmp/tags.scm	/^(define r6rs:char-ci<? 0)$/;"	f	language:Scheme
r6rs:char-ci=?	/tmp/tags.scm	/^(define r6rs:char-ci=? 0)$/;"	f	language:Scheme
r6rs:char-ci>=?	/tmp/tags.scm	/^(define r6rs:char-ci>=? 0)$/;"	f	language:Scheme
r6rs:char-ci>?	/tmp/tags.scm	/^(define r6rs:char-ci>? 0)$/;"	f	language:Scheme
r6rs:char<=?	/tmp/tags.scm	/^(define r6rs:char<=? 0)$/;"	f	language:Scheme
r6rs:char<?	/tmp/tags.scm	/^(define r6rs:char<? 0)$/;"	f	language:Scheme
r6rs:char=?	/tmp/tags.scm	/^(define r6rs:char=? 0)$/;"	f	language:Scheme
r6rs:char>=?	/tmp/tags.scm	/^(define r6rs:char>=? 0)$/;"	f	language:Scheme
r6rs:char>?	/tmp/tags.scm	/^(define r6rs:char>? 0)$/;"	f	language:Scheme
r6rs:command-line	/tmp/tags.scm	/^(define r6rs:command-line 0)$/;"	f	language:Scheme
r6rs:current-error-port	/tmp/tags.scm	/^(define r6rs:current-error-port 0)$/;"	f	language:Scheme
r6rs:current-input-port	/tmp/tags.scm	/^(define r6rs:current-input-port 0)$/;"	f	language:Scheme
r6rs:current-output-port	/tmp/tags.scm	/^(define r6rs:current-output-port 0)$/;"	f	language:Scheme
r6rs:delete-file	/tmp/tags.scm	/^(define r6rs:delete-file 0)$/;"	f	language:Scheme
r6rs:dynamic-wind	/tmp/tags.scm	/^(define r6rs:dynamic-wind 0)$/;"	f	language:Scheme
r6rs:eval	/tmp/tags.scm	/^(define r6rs:eval 0)$/;"	f	language:Scheme
r6rs:exit	/tmp/tags.scm	/^(define r6rs:exit 0)$/;"	f	language:Scheme
r6rs:file-exists?	/tmp/tags.scm	/^(define r6rs:file-exists? 0)$/;"	f	language:Scheme
r6rs:flush-output-port	/tmp/tags.scm	/^(define r6rs:flush-output-port 0)$/;"	f	language:Scheme
r6rs:fx*	/tmp/tags.scm	/^(define r6rs:fx* 0)$/;"	f	language:Scheme
r6rs:fx+	/tmp/tags.scm	/^(define r6rs:fx+ 0)$/;"	f	language:Scheme
r6rs:fx-	/tmp/tags.scm	/^(define r6rs:fx- 0)$/;"	f	language:Scheme
r6rs:number->string	/tmp/tags.scm	/^(define r6rs:number->string 0)$/;"	f	language:Scheme
r6rs:open-input-file	/tmp/tags.scm	/^(define r6rs:open-input-file 0)$/;"	f	language:Scheme
r6rs:open-output-file	/tmp/tags.scm	/^(define r6rs:open-output-file 0)$/;"	f	language:Scheme
r6rs:record-constructor	/tmp/tags.scm	/^(define r6rs:record-constructor 0)$/;"	f	language:Scheme
r6rs:record?	/tmp/tags.scm	/^(define r6rs:record? 0)$/;"	f	language:Scheme
r6rs:standard-error-port	/tmp/tags.scm	/^(define r6rs:standard-error-port 0)$/;"	f	language:Scheme
r6rs:standard-input-port	/tmp/tags.scm	/^(define r6rs:standard-input-port 0)$/;"	f	language:Scheme
r6rs:standard-output-port	/tmp/tags.scm	/^(define r6rs:standard-output-port 0)$/;"	f	language:Scheme
r6rs:string->number	/tmp/tags.scm	/^(define r6rs:string->number 0)$/;"	f	language:Scheme
r6rs:string-ci<=?	/tmp/tags.scm	/^(define r6rs:string-ci<=? 0)$/;"	f	language:Scheme
r6rs:string-ci<?	/tmp/tags.scm	/^(define r6rs:string-ci<? 0)$/;"	f	language:Scheme
r6rs:string-ci=?	/tmp/tags.scm	/^(define r6rs:string-ci=? 0)$/;"	f	language:Scheme
r6rs:string-ci>=?	/tmp/tags.scm	/^(define r6rs:string-ci>=? 0)$/;"	f	language:Scheme
r6rs:string-ci>?	/tmp/tags.scm	/^(define r6rs:string-ci>? 0)$/;"	f	language:Scheme
r6rs:string<=?	/tmp/tags.scm	/^(define r6rs:string<=? 0)$/;"	f	language:Scheme
r6rs:string<?	/tmp/tags.scm	/^(define r6rs:string<? 0)$/;"	f	language:Scheme
r6rs:string=?	/tmp/tags.scm	/^(define r6rs:string=? 0)$/;"	f	language:Scheme
r6rs:string>=?	/tmp/tags.scm	/^(define r6rs:string>=? 0)$/;"	f	language:Scheme
r6rs:string>?	/tmp/tags.scm	/^(define r6rs:string>? 0)$/;"	f	language:Scheme
r6rs:syntax-rules	/tmp/tags.scm	/^(define r6rs:syntax-rules 0)$/;"	f	language:Scheme
r6rs:utf-16-codec	/tmp/tags.scm	/^(define r6rs:utf-16-codec 0)$/;"	f	language:Scheme
r6rs:with-input-from-file	/tmp/tags.scm	/^(define r6rs:with-input-from-file 0)$/;"	f	language:Scheme
r6rs:with-output-to-file	/tmp/tags.scm	/^(define r6rs:with-output-to-file 0)$/;"	f	language:Scheme
raise	/tmp/tags.scm	/^(define raise 0)$/;"	f	language:Scheme
raise-continuable	/tmp/tags.scm	/^(define raise-continuable 0)$/;"	f	language:Scheme
random	/tmp/tags.scm	/^(define random 0)$/;"	f	language:Scheme
random-seed	/tmp/tags.scm	/^(define random-seed 0)$/;"	f	language:Scheme
ratio?	/tmp/tags.scm	/^(define ratio? 0)$/;"	f	language:Scheme
rational	/tmp/tags.scm	/^(define rational 0)$/;"	f	language:Scheme
rational-valued?	/tmp/tags.scm	/^(define rational-valued? 0)$/;"	f	language:Scheme
rational?	/tmp/tags.scm	/^(define rational? 0)$/;"	f	language:Scheme
rationalize	/tmp/tags.scm	/^(define rationalize 0)$/;"	f	language:Scheme
ratnum?	/tmp/tags.scm	/^(define ratnum? 0)$/;"	f	language:Scheme
read	/tmp/tags.scm	/^(define read 0)$/;"	f	language:Scheme
read-char	/tmp/tags.scm	/^(define read-char 0)$/;"	f	language:Scheme
read-line	/tmp/tags.scm	/^(define read-line 0)$/;"	f	language:Scheme
read-token	/tmp/tags.scm	/^(define read-token 0)$/;"	f	language:Scheme
real->flonum	/tmp/tags.scm	/^(define real->flonum 0)$/;"	f	language:Scheme
real-part	/tmp/tags.scm	/^(define real-part 0)$/;"	f	language:Scheme
real-time	/tmp/tags.scm	/^(define real-time 0)$/;"	f	language:Scheme
real-valued?	/tmp/tags.scm	/^(define real-valued? 0)$/;"	f	language:Scheme
real?	/tmp/tags.scm	/^(define real? 0)$/;"	f	language:Scheme
rec	/tmp/tags.scm	/^(define rec 0)$/;"	f	language:Scheme
record-accessor	/tmp/tags.scm	/^(define record-accessor 0)$/;"	f	language:Scheme
record-case	/tmp/tags.scm	/^(define record-case 0)$/;"	f	language:Scheme
record-constructor	/tmp/tags.scm	/^(define record-constructor 0)$/;"	f	language:Scheme
record-constructor-descriptor	/tmp/tags.scm	/^(define record-constructor-descriptor 0)$/;"	f	language:Scheme
record-constructor-descriptor?	/tmp/tags.scm	/^(define record-constructor-descriptor? 0)$/;"	f	language:Scheme
record-equal-procedure	/tmp/tags.scm	/^(define record-equal-procedure 0)$/;"	f	language:Scheme
record-field-mutable?	/tmp/tags.scm	/^(define record-field-mutable? 0)$/;"	f	language:Scheme
record-hash-procedure	/tmp/tags.scm	/^(define record-hash-procedure 0)$/;"	f	language:Scheme
record-mutator	/tmp/tags.scm	/^(define record-mutator 0)$/;"	f	language:Scheme
record-predicate	/tmp/tags.scm	/^(define record-predicate 0)$/;"	f	language:Scheme
record-reader	/tmp/tags.scm	/^(define record-reader 0)$/;"	f	language:Scheme
record-rtd	/tmp/tags.scm	/^(define record-rtd 0)$/;"	f	language:Scheme
record-type-descriptor	/tmp/tags.scm	/^(define record-type-descriptor 0)$/;"	f	language:Scheme
record-type-descriptor?	/tmp/tags.scm	/^(define record-type-descriptor? 0)$/;"	f	language:Scheme
record-type-equal-procedure	/tmp/tags.scm	/^(define record-type-equal-procedure 0)$/;"	f	language:Scheme
record-type-field-names	/tmp/tags.scm	/^(define record-type-field-names 0)$/;"	f	language:Scheme
record-type-generative?	/tmp/tags.scm	/^(define record-type-generative? 0)$/;"	f	language:Scheme
record-type-hash-procedure	/tmp/tags.scm	/^(define record-type-hash-procedure 0)$/;"	f	language:Scheme
record-type-name	/tmp/tags.scm	/^(define record-type-name 0)$/;"	f	language:Scheme
record-type-opaque?	/tmp/tags.scm	/^(define record-type-opaque? 0)$/;"	f	language:Scheme
record-type-parent	/tmp/tags.scm	/^(define record-type-parent 0)$/;"	f	language:Scheme
record-type-sealed?	/tmp/tags.scm	/^(define record-type-sealed? 0)$/;"	f	language:Scheme
record-type-uid	/tmp/tags.scm	/^(define record-type-uid 0)$/;"	f	language:Scheme
record-writer	/tmp/tags.scm	/^(define record-writer 0)$/;"	f	language:Scheme
record?	/tmp/tags.scm	/^(define record? 0)$/;"	f	language:Scheme
recur	/tmp/tags.scm	/^(define recur 0)$/;"	f	language:Scheme
ref	/tmp/tags.scm	/^(define ref 0)$/;"	f	language:Scheme
register-signal-handler	/tmp/tags.scm	/^(define register-signal-handler 0)$/;"	f	language:Scheme
release-minimum-generation	/tmp/tags.scm	/^(define release-minimum-generation 0)$/;"	f	language:Scheme
rem	/tmp/tags.scm	/^(define rem 0)$/;"	f	language:Scheme
rem!	/tmp/tags.scm	/^(define rem! 0)$/;"	f	language:Scheme
remainder	/tmp/tags.scm	/^(define remainder 0)$/;"	f	language:Scheme
remove	/tmp/tags.scm	/^(define remove 0)$/;"	f	language:Scheme
remove!	/tmp/tags.scm	/^(define remove! 0)$/;"	f	language:Scheme
remove-foreign-entry	/tmp/tags.scm	/^(define remove-foreign-entry 0)$/;"	f	language:Scheme
remove-hash-table!	/tmp/tags.scm	/^(define remove-hash-table! 0)$/;"	f	language:Scheme
remp	/tmp/tags.scm	/^(define remp 0)$/;"	f	language:Scheme
remprop	/tmp/tags.scm	/^(define remprop 0)$/;"	f	language:Scheme
remq	/tmp/tags.scm	/^(define remq 0)$/;"	f	language:Scheme
remq!	/tmp/tags.scm	/^(define remq! 0)$/;"	f	language:Scheme
remv	/tmp/tags.scm	/^(define remv 0)$/;"	f	language:Scheme
remv!	/tmp/tags.scm	/^(define remv! 0)$/;"	f	language:Scheme
rename	/tmp/tags.scm	/^(define rename 0)$/;"	f	language:Scheme
rename-file	/tmp/tags.scm	/^(define rename-file 0)$/;"	f	language:Scheme
require-nongenerative-clause	/tmp/tags.scm	/^(define require-nongenerative-clause 0)$/;"	f	language:Scheme
reset	/tmp/tags.scm	/^(define reset 0)$/;"	f	language:Scheme
reset-cost-center!	/tmp/tags.scm	/^(define reset-cost-center! 0)$/;"	f	language:Scheme
reset-handler	/tmp/tags.scm	/^(define reset-handler 0)$/;"	f	language:Scheme
reset-maximum-memory-bytes!	/tmp/tags.scm	/^(define reset-maximum-memory-bytes! 0)$/;"	f	language:Scheme
reverse	/tmp/tags.scm	/^(define reverse 0)$/;"	f	language:Scheme
reverse!	/tmp/tags.scm	/^(define reverse! 0)$/;"	f	language:Scheme
revisit	/tmp/tags.scm	/^(define revisit 0)$/;"	f	language:Scheme
round	/tmp/tags.scm	/^(define round 0)$/;"	f	language:Scheme
run-cp0	/tmp/tags.scm	/^(define run-cp0 0)$/;"	f	language:Scheme
s8-list->bytevector	/tmp/tags.scm	/^(define s8-list->bytevector 0)$/;"	f	language:Scheme
sc-expand	/tmp/tags.scm	/^(define sc-expand 0)$/;"	f	language:Scheme
scheme	/tmp/tags.scm	/^(define scheme 0)$/;"	f	language:Scheme
scheme-environment	/tmp/tags.scm	/^(define scheme-environment 0)$/;"	f	language:Scheme
scheme-program	/tmp/tags.scm	/^(define scheme-program 0)$/;"	f	language:Scheme
scheme-report-environment	/tmp/tags.scm	/^(define scheme-report-environment 0)$/;"	f	language:Scheme
scheme-script	/tmp/tags.scm	/^(define scheme-script 0)$/;"	f	language:Scheme
scheme-start	/tmp/tags.scm	/^(define scheme-start 0)$/;"	f	language:Scheme
scheme-version	/tmp/tags.scm	/^(define scheme-version 0)$/;"	f	language:Scheme
scheme-version-number	/tmp/tags.scm	/^(define scheme-version-number 0)$/;"	f	language:Scheme
sealed	/tmp/tags.scm	/^(define sealed 0)$/;"	f	language:Scheme
second	/tmp/tags.scm	/^(define second 0)$/;"	f	language:Scheme
serious-condition?	/tmp/tags.scm	/^(define serious-condition? 0)$/;"	f	language:Scheme
set!	/tmp/tags.scm	/^(define set! 0)$/;"	f	language:Scheme
set-binary-port-input-buffer!	/tmp/tags.scm	/^(define set-binary-port-input-buffer! 0)$/;"	f	language:Scheme
set-binary-port-input-index!	/tmp/tags.scm	/^(define set-binary-port-input-index! 0)$/;"	f	language:Scheme
set-binary-port-input-size!	/tmp/tags.scm	/^(define set-binary-port-input-size! 0)$/;"	f	language:Scheme
set-binary-port-output-buffer!	/tmp/tags.scm	/^(define set-binary-port-output-buffer! 0)$/;"	f	language:Scheme
set-binary-port-output-index!	/tmp/tags.scm	/^(define set-binary-port-output-index! 0)$/;"	f	language:Scheme
set-binary-port-output-size!	/tmp/tags.scm	/^(define set-binary-port-output-size! 0)$/;"	f	language:Scheme
set-box!	/tmp/tags.scm	/^(define set-box! 0)$/;"	f	language:Scheme
set-car!	/tmp/tags.scm	/^(define set-car! 0)$/;"	f	language:Scheme
set-cdr!	/tmp/tags.scm	/^(define set-cdr! 0)$/;"	f	language:Scheme
set-global-value!	/tmp/tags.scm	/^(define set-global-value! 0)$/;"	f	language:Scheme
set-port-bol!	/tmp/tags.scm	/^(define set-port-bol! 0)$/;"	f	language:Scheme
set-port-eof!	/tmp/tags.scm	/^(define set-port-eof! 0)$/;"	f	language:Scheme
set-port-input-buffer!	/tmp/tags.scm	/^(define set-port-input-buffer! 0)$/;"	f	language:Scheme
set-port-input-index!	/tmp/tags.scm	/^(define set-port-input-index! 0)$/;"	f	language:Scheme
set-port-input-size!	/tmp/tags.scm	/^(define set-port-input-size! 0)$/;"	f	language:Scheme
set-port-length!	/tmp/tags.scm	/^(define set-port-length! 0)$/;"	f	language:Scheme
set-port-name!	/tmp/tags.scm	/^(define set-port-name! 0)$/;"	f	language:Scheme
set-port-nonblocking!	/tmp/tags.scm	/^(define set-port-nonblocking! 0)$/;"	f	language:Scheme
set-port-output-buffer!	/tmp/tags.scm	/^(define set-port-output-buffer! 0)$/;"	f	language:Scheme
set-port-output-index!	/tmp/tags.scm	/^(define set-port-output-index! 0)$/;"	f	language:Scheme
set-port-output-size!	/tmp/tags.scm	/^(define set-port-output-size! 0)$/;"	f	language:Scheme
set-port-position!	/tmp/tags.scm	/^(define set-port-position! 0)$/;"	f	language:Scheme
set-sstats-bytes!	/tmp/tags.scm	/^(define set-sstats-bytes! 0)$/;"	f	language:Scheme
set-sstats-cpu!	/tmp/tags.scm	/^(define set-sstats-cpu! 0)$/;"	f	language:Scheme
set-sstats-gc-bytes!	/tmp/tags.scm	/^(define set-sstats-gc-bytes! 0)$/;"	f	language:Scheme
set-sstats-gc-count!	/tmp/tags.scm	/^(define set-sstats-gc-count! 0)$/;"	f	language:Scheme
set-sstats-gc-cpu!	/tmp/tags.scm	/^(define set-sstats-gc-cpu! 0)$/;"	f	language:Scheme
set-sstats-gc-real!	/tmp/tags.scm	/^(define set-sstats-gc-real! 0)$/;"	f	language:Scheme
set-sstats-real!	/tmp/tags.scm	/^(define set-sstats-real! 0)$/;"	f	language:Scheme
set-symbol-value!	/tmp/tags.scm	/^(define set-symbol-value! 0)$/;"	f	language:Scheme
set-textual-port-input-buffer!	/tmp/tags.scm	/^(define set-textual-port-input-buffer! 0)$/;"	f	language:Scheme
set-textual-port-input-index!	/tmp/tags.scm	/^(define set-textual-port-input-index! 0)$/;"	f	language:Scheme
set-textual-port-input-size!	/tmp/tags.scm	/^(define set-textual-port-input-size! 0)$/;"	f	language:Scheme
set-textual-port-output-buffer!	/tmp/tags.scm	/^(define set-textual-port-output-buffer! 0)$/;"	f	language:Scheme
set-textual-port-output-index!	/tmp/tags.scm	/^(define set-textual-port-output-index! 0)$/;"	f	language:Scheme
set-textual-port-output-size!	/tmp/tags.scm	/^(define set-textual-port-output-size! 0)$/;"	f	language:Scheme
set-time-nanosecond!	/tmp/tags.scm	/^(define set-time-nanosecond! 0)$/;"	f	language:Scheme
set-time-second!	/tmp/tags.scm	/^(define set-time-second! 0)$/;"	f	language:Scheme
set-time-type!	/tmp/tags.scm	/^(define set-time-type! 0)$/;"	f	language:Scheme
set-timer	/tmp/tags.scm	/^(define set-timer 0)$/;"	f	language:Scheme
set-top-level-value!	/tmp/tags.scm	/^(define set-top-level-value! 0)$/;"	f	language:Scheme
set-virtual-register!	/tmp/tags.scm	/^(define set-virtual-register! 0)$/;"	f	language:Scheme
short-integer?	/tmp/tags.scm	/^(define short-integer? 0)$/;"	f	language:Scheme
simple-conditions	/tmp/tags.scm	/^(define simple-conditions 0)$/;"	f	language:Scheme
sin	/tmp/tags.scm	/^(define sin 0)$/;"	f	language:Scheme
sinh	/tmp/tags.scm	/^(define sinh 0)$/;"	f	language:Scheme
sint-list->bytevector	/tmp/tags.scm	/^(define sint-list->bytevector 0)$/;"	f	language:Scheme
sleep	/tmp/tags.scm	/^(define sleep 0)$/;"	f	language:Scheme
sort	/tmp/tags.scm	/^(define sort 0)$/;"	f	language:Scheme
sort!	/tmp/tags.scm	/^(define sort! 0)$/;"	f	language:Scheme
source-condition-form	/tmp/tags.scm	/^(define source-condition-form 0)$/;"	f	language:Scheme
source-condition?	/tmp/tags.scm	/^(define source-condition? 0)$/;"	f	language:Scheme
source-directories	/tmp/tags.scm	/^(define source-directories 0)$/;"	f	language:Scheme
source-file-descriptor	/tmp/tags.scm	/^(define source-file-descriptor 0)$/;"	f	language:Scheme
source-file-descriptor-checksum	/tmp/tags.scm	/^(define source-file-descriptor-checksum 0)$/;"	f	language:Scheme
source-file-descriptor-path	/tmp/tags.scm	/^(define source-file-descriptor-path 0)$/;"	f	language:Scheme
source-file-descriptor?	/tmp/tags.scm	/^(define source-file-descriptor? 0)$/;"	f	language:Scheme
source-object-bfp	/tmp/tags.scm	/^(define source-object-bfp 0)$/;"	f	language:Scheme
source-object-column	/tmp/tags.scm	/^(define source-object-column 0)$/;"	f	language:Scheme
source-object-efp	/tmp/tags.scm	/^(define source-object-efp 0)$/;"	f	language:Scheme
source-object-line	/tmp/tags.scm	/^(define source-object-line 0)$/;"	f	language:Scheme
source-object-sfd	/tmp/tags.scm	/^(define source-object-sfd 0)$/;"	f	language:Scheme
source-object?	/tmp/tags.scm	/^(define source-object? 0)$/;"	f	language:Scheme
sqrt	/tmp/tags.scm	/^(define sqrt 0)$/;"	f	language:Scheme
sstats-bytes	/tmp/tags.scm	/^(define sstats-bytes 0)$/;"	f	language:Scheme
sstats-cpu	/tmp/tags.scm	/^(define sstats-cpu 0)$/;"	f	language:Scheme
sstats-difference	/tmp/tags.scm	/^(define sstats-difference 0)$/;"	f	language:Scheme
sstats-gc-bytes	/tmp/tags.scm	/^(define sstats-gc-bytes 0)$/;"	f	language:Scheme
sstats-gc-count	/tmp/tags.scm	/^(define sstats-gc-count 0)$/;"	f	language:Scheme
sstats-gc-cpu	/tmp/tags.scm	/^(define sstats-gc-cpu 0)$/;"	f	language:Scheme
sstats-gc-real	/tmp/tags.scm	/^(define sstats-gc-real 0)$/;"	f	language:Scheme
sstats-print	/tmp/tags.scm	/^(define sstats-print 0)$/;"	f	language:Scheme
sstats-real	/tmp/tags.scm	/^(define sstats-real 0)$/;"	f	language:Scheme
sstats?	/tmp/tags.scm	/^(define sstats? 0)$/;"	f	language:Scheme
standard-error-port	/tmp/tags.scm	/^(define standard-error-port 0)$/;"	f	language:Scheme
standard-input-port	/tmp/tags.scm	/^(define standard-input-port 0)$/;"	f	language:Scheme
standard-output-port	/tmp/tags.scm	/^(define standard-output-port 0)$/;"	f	language:Scheme
statistics	/tmp/tags.scm	/^(define statistics 0)$/;"	f	language:Scheme
string	/tmp/tags.scm	/^(define string 0)$/;"	f	language:Scheme
string->bytevector	/tmp/tags.scm	/^(define string->bytevector 0)$/;"	f	language:Scheme
string->immutable-string	/tmp/tags.scm	/^(define string->immutable-string 0)$/;"	f	language:Scheme
string->list	/tmp/tags.scm	/^(define string->list 0)$/;"	f	language:Scheme
string->number	/tmp/tags.scm	/^(define string->number 0)$/;"	f	language:Scheme
string->symbol	/tmp/tags.scm	/^(define string->symbol 0)$/;"	f	language:Scheme
string->uninterned-symbol	/tmp/tags.scm	/^(define string->uninterned-symbol 0)$/;"	f	language:Scheme
string->utf16	/tmp/tags.scm	/^(define string->utf16 0)$/;"	f	language:Scheme
string->utf32	/tmp/tags.scm	/^(define string->utf32 0)$/;"	f	language:Scheme
string->utf8	/tmp/tags.scm	/^(define string->utf8 0)$/;"	f	language:Scheme
string-append	/tmp/tags.scm	/^(define string-append 0)$/;"	f	language:Scheme
string-ci-hash	/tmp/tags.scm	/^(define string-ci-hash 0)$/;"	f	language:Scheme
string-ci<=?	/tmp/tags.scm	/^(define string-ci<=? 0)$/;"	f	language:Scheme
string-ci<?	/tmp/tags.scm	/^(define string-ci<? 0)$/;"	f	language:Scheme
string-ci=?	/tmp/tags.scm	/^(define string-ci=? 0)$/;"	f	language:Scheme
string-ci>=?	/tmp/tags.scm	/^(define string-ci>=? 0)$/;"	f	language:Scheme
string-ci>?	/tmp/tags.scm	/^(define string-ci>? 0)$/;"	f	language:Scheme
string-copy	/tmp/tags.scm	/^(define string-copy 0)$/;"	f	language:Scheme
string-copy!	/tmp/tags.scm	/^(define string-copy! 0)$/;"	f	language:Scheme
string-downcase	/tmp/tags.scm	/^(define string-downcase 0)$/;"	f	language:Scheme
string-equal?	/tmp/tags.scm	/^(define string-equal? 0)$/;"	f	language:Scheme
string-fill!	/tmp/tags.scm	/^(define string-fill! 0)$/;"	f	language:Scheme
string-foldcase	/tmp/tags.scm	/^(define string-foldcase 0)$/;"	f	language:Scheme
string-for-each	/tmp/tags.scm	/^(define string-for-each 0)$/;"	f	language:Scheme
string-hash	/tmp/tags.scm	/^(define string-hash 0)$/;"	f	language:Scheme
string-index	/tmp/tags.scm	/^(define string-index 0)$/;"	f	language:Scheme
string-length	/tmp/tags.scm	/^(define string-length 0)$/;"	f	language:Scheme
string-less?	/tmp/tags.scm	/^(define string-less? 0)$/;"	f	language:Scheme
string-normalize-nfc	/tmp/tags.scm	/^(define string-normalize-nfc 0)$/;"	f	language:Scheme
string-normalize-nfd	/tmp/tags.scm	/^(define string-normalize-nfd 0)$/;"	f	language:Scheme
string-normalize-nfkc	/tmp/tags.scm	/^(define string-normalize-nfkc 0)$/;"	f	language:Scheme
string-normalize-nfkd	/tmp/tags.scm	/^(define string-normalize-nfkd 0)$/;"	f	language:Scheme
string-prefix?	/tmp/tags.scm	/^(define string-prefix? 0)$/;"	f	language:Scheme
string-ref	/tmp/tags.scm	/^(define string-ref 0)$/;"	f	language:Scheme
string-set!	/tmp/tags.scm	/^(define string-set! 0)$/;"	f	language:Scheme
string-titlecase	/tmp/tags.scm	/^(define string-titlecase 0)$/;"	f	language:Scheme
string-truncate!	/tmp/tags.scm	/^(define string-truncate! 0)$/;"	f	language:Scheme
string-upcase	/tmp/tags.scm	/^(define string-upcase 0)$/;"	f	language:Scheme
string<=?	/tmp/tags.scm	/^(define string<=? 0)$/;"	f	language:Scheme
string<?	/tmp/tags.scm	/^(define string<? 0)$/;"	f	language:Scheme
string=?	/tmp/tags.scm	/^(define string=? 0)$/;"	f	language:Scheme
string>=?	/tmp/tags.scm	/^(define string>=? 0)$/;"	f	language:Scheme
string>?	/tmp/tags.scm	/^(define string>? 0)$/;"	f	language:Scheme
string?	/tmp/tags.scm	/^(define string? 0)$/;"	f	language:Scheme
strip-fasl-file	/tmp/tags.scm	/^(define strip-fasl-file 0)$/;"	f	language:Scheme
sub1	/tmp/tags.scm	/^(define sub1 0)$/;"	f	language:Scheme
subset-mode	/tmp/tags.scm	/^(define subset-mode 0)$/;"	f	language:Scheme
subst	/tmp/tags.scm	/^(define subst 0)$/;"	f	language:Scheme
subst!	/tmp/tags.scm	/^(define subst! 0)$/;"	f	language:Scheme
substq	/tmp/tags.scm	/^(define substq 0)$/;"	f	language:Scheme
substq!	/tmp/tags.scm	/^(define substq! 0)$/;"	f	language:Scheme
substring	/tmp/tags.scm	/^(define substring 0)$/;"	f	language:Scheme
substring-fill!	/tmp/tags.scm	/^(define substring-fill! 0)$/;"	f	language:Scheme
substv	/tmp/tags.scm	/^(define substv 0)$/;"	f	language:Scheme
substv!	/tmp/tags.scm	/^(define substv! 0)$/;"	f	language:Scheme
subtract-duration	/tmp/tags.scm	/^(define subtract-duration 0)$/;"	f	language:Scheme
subtract-duration!	/tmp/tags.scm	/^(define subtract-duration! 0)$/;"	f	language:Scheme
suppress-greeting	/tmp/tags.scm	/^(define suppress-greeting 0)$/;"	f	language:Scheme
swap-box!	/tmp/tags.scm	/^(define swap-box! 0)$/;"	f	language:Scheme
symbol->string	/tmp/tags.scm	/^(define symbol->string 0)$/;"	f	language:Scheme
symbol-hash	/tmp/tags.scm	/^(define symbol-hash 0)$/;"	f	language:Scheme
symbol-hashtable-cell	/tmp/tags.scm	/^(define symbol-hashtable-cell 0)$/;"	f	language:Scheme
symbol-hashtable-contains?	/tmp/tags.scm	/^(define symbol-hashtable-contains? 0)$/;"	f	language:Scheme
symbol-hashtable-delete!	/tmp/tags.scm	/^(define symbol-hashtable-delete! 0)$/;"	f	language:Scheme
symbol-hashtable-ref	/tmp/tags.scm	/^(define symbol-hashtable-ref 0)$/;"	f	language:Scheme
symbol-hashtable-set!	/tmp/tags.scm	/^(define symbol-hashtable-set! 0)$/;"	f	language:Scheme
symbol-hashtable-update!	/tmp/tags.scm	/^(define symbol-hashtable-update! 0)$/;"	f	language:Scheme
symbol-hashtable?	/tmp/tags.scm	/^(define symbol-hashtable? 0)$/;"	f	language:Scheme
symbol-name	/tmp/tags.scm	/^(define symbol-name 0)$/;"	f	language:Scheme
symbol-value	/tmp/tags.scm	/^(define symbol-value 0)$/;"	f	language:Scheme
symbol=?	/tmp/tags.scm	/^(define symbol=? 0)$/;"	f	language:Scheme
symbol?	/tmp/tags.scm	/^(define symbol? 0)$/;"	f	language:Scheme
syntax	/tmp/tags.scm	/^(define syntax 0)$/;"	f	language:Scheme
syntax->annotation	/tmp/tags.scm	/^(define syntax->annotation 0)$/;"	f	language:Scheme
syntax->datum	/tmp/tags.scm	/^(define syntax->datum 0)$/;"	f	language:Scheme
syntax->list	/tmp/tags.scm	/^(define syntax->list 0)$/;"	f	language:Scheme
syntax->vector	/tmp/tags.scm	/^(define syntax->vector 0)$/;"	f	language:Scheme
syntax-case	/tmp/tags.scm	/^(define syntax-case 0)$/;"	f	language:Scheme
syntax-error	/tmp/tags.scm	/^(define syntax-error 0)$/;"	f	language:Scheme
syntax-object->datum	/tmp/tags.scm	/^(define syntax-object->datum 0)$/;"	f	language:Scheme
syntax-rules	/tmp/tags.scm	/^(define syntax-rules 0)$/;"	f	language:Scheme
syntax-violation	/tmp/tags.scm	/^(define syntax-violation 0)$/;"	f	language:Scheme
syntax-violation-form	/tmp/tags.scm	/^(define syntax-violation-form 0)$/;"	f	language:Scheme
syntax-violation-subform	/tmp/tags.scm	/^(define syntax-violation-subform 0)$/;"	f	language:Scheme
syntax-violation?	/tmp/tags.scm	/^(define syntax-violation? 0)$/;"	f	language:Scheme
system	/tmp/tags.scm	/^(define system 0)$/;"	f	language:Scheme
t	/tmp/tags.scm	/^(define t 0)$/;"	f	language:Scheme
tan	/tmp/tags.scm	/^(define tan 0)$/;"	f	language:Scheme
tanh	/tmp/tags.scm	/^(define tanh 0)$/;"	f	language:Scheme
temp-symbol?	/tmp/tags.scm	/^(define temp-symbol? 0)$/;"	f	language:Scheme
textual-port-input-buffer	/tmp/tags.scm	/^(define textual-port-input-buffer 0)$/;"	f	language:Scheme
textual-port-input-count	/tmp/tags.scm	/^(define textual-port-input-count 0)$/;"	f	language:Scheme
textual-port-input-index	/tmp/tags.scm	/^(define textual-port-input-index 0)$/;"	f	language:Scheme
textual-port-input-size	/tmp/tags.scm	/^(define textual-port-input-size 0)$/;"	f	language:Scheme
textual-port-output-buffer	/tmp/tags.scm	/^(define textual-port-output-buffer 0)$/;"	f	language:Scheme
textual-port-output-count	/tmp/tags.scm	/^(define textual-port-output-count 0)$/;"	f	language:Scheme
textual-port-output-index	/tmp/tags.scm	/^(define textual-port-output-index 0)$/;"	f	language:Scheme
textual-port-output-size	/tmp/tags.scm	/^(define textual-port-output-size 0)$/;"	f	language:Scheme
textual-port?	/tmp/tags.scm	/^(define textual-port? 0)$/;"	f	language:Scheme
third	/tmp/tags.scm	/^(define third 0)$/;"	f	language:Scheme
thread?	/tmp/tags.scm	/^(define thread? 0)$/;"	f	language:Scheme
threaded?	/tmp/tags.scm	/^(define threaded? 0)$/;"	f	language:Scheme
time	/tmp/tags.scm	/^(define time 0)$/;"	f	language:Scheme
time-difference	/tmp/tags.scm	/^(define time-difference 0)$/;"	f	language:Scheme
time-difference!	/tmp/tags.scm	/^(define time-difference! 0)$/;"	f	language:Scheme
time-nanosecond	/tmp/tags.scm	/^(define time-nanosecond 0)$/;"	f	language:Scheme
time-second	/tmp/tags.scm	/^(define time-second 0)$/;"	f	language:Scheme
time-type	/tmp/tags.scm	/^(define time-type 0)$/;"	f	language:Scheme
time-utc->date	/tmp/tags.scm	/^(define time-utc->date 0)$/;"	f	language:Scheme
time<=?	/tmp/tags.scm	/^(define time<=? 0)$/;"	f	language:Scheme
time<?	/tmp/tags.scm	/^(define time<? 0)$/;"	f	language:Scheme
time=?	/tmp/tags.scm	/^(define time=? 0)$/;"	f	language:Scheme
time>=?	/tmp/tags.scm	/^(define time>=? 0)$/;"	f	language:Scheme
time>?	/tmp/tags.scm	/^(define time>? 0)$/;"	f	language:Scheme
time?	/tmp/tags.scm	/^(define time? 0)$/;"	f	language:Scheme
timer-interrupt-handler	/tmp/tags.scm	/^(define timer-interrupt-handler 0)$/;"	f	language:Scheme
top-level-bound?	/tmp/tags.scm	/^(define top-level-bound? 0)$/;"	f	language:Scheme
top-level-mutable?	/tmp/tags.scm	/^(define top-level-mutable? 0)$/;"	f	language:Scheme
top-level-program	/tmp/tags.scm	/^(define top-level-program 0)$/;"	f	language:Scheme
top-level-syntax	/tmp/tags.scm	/^(define top-level-syntax 0)$/;"	f	language:Scheme
top-level-syntax?	/tmp/tags.scm	/^(define top-level-syntax? 0)$/;"	f	language:Scheme
top-level-value	/tmp/tags.scm	/^(define top-level-value 0)$/;"	f	language:Scheme
trace	/tmp/tags.scm	/^(define trace 0)$/;"	f	language:Scheme
trace-case-lambda	/tmp/tags.scm	/^(define trace-case-lambda 0)$/;"	f	language:Scheme
trace-define	/tmp/tags.scm	/^(define trace-define 0)$/;"	f	language:Scheme
trace-define-syntax	/tmp/tags.scm	/^(define trace-define-syntax 0)$/;"	f	language:Scheme
trace-do	/tmp/tags.scm	/^(define trace-do 0)$/;"	f	language:Scheme
trace-lambda	/tmp/tags.scm	/^(define trace-lambda 0)$/;"	f	language:Scheme
trace-let	/tmp/tags.scm	/^(define trace-let 0)$/;"	f	language:Scheme
trace-output-port	/tmp/tags.scm	/^(define trace-output-port 0)$/;"	f	language:Scheme
trace-print	/tmp/tags.scm	/^(define trace-print 0)$/;"	f	language:Scheme
trace-recur	/tmp/tags.scm	/^(define trace-recur 0)$/;"	f	language:Scheme
transcoded-port	/tmp/tags.scm	/^(define transcoded-port 0)$/;"	f	language:Scheme
transcoder-codec	/tmp/tags.scm	/^(define transcoder-codec 0)$/;"	f	language:Scheme
transcoder-eol-style	/tmp/tags.scm	/^(define transcoder-eol-style 0)$/;"	f	language:Scheme
transcoder-error-handling-mode	/tmp/tags.scm	/^(define transcoder-error-handling-mode 0)$/;"	f	language:Scheme
transcoder?	/tmp/tags.scm	/^(define transcoder? 0)$/;"	f	language:Scheme
transcript-cafe	/tmp/tags.scm	/^(define transcript-cafe 0)$/;"	f	language:Scheme
transcript-off	/tmp/tags.scm	/^(define transcript-off 0)$/;"	f	language:Scheme
transcript-on	/tmp/tags.scm	/^(define transcript-on 0)$/;"	f	language:Scheme
tree-copy	/tmp/tags.scm	/^(define tree-copy 0)$/;"	f	language:Scheme
true	/tmp/tags.scm	/^(define true 0)$/;"	f	language:Scheme
truncate	/tmp/tags.scm	/^(define truncate 0)$/;"	f	language:Scheme
truncate-file	/tmp/tags.scm	/^(define truncate-file 0)$/;"	f	language:Scheme
truncate-port	/tmp/tags.scm	/^(define truncate-port 0)$/;"	f	language:Scheme
type-descriptor	/tmp/tags.scm	/^(define type-descriptor 0)$/;"	f	language:Scheme
u8-list->bytevector	/tmp/tags.scm	/^(define u8-list->bytevector 0)$/;"	f	language:Scheme
uint-list->bytevector	/tmp/tags.scm	/^(define uint-list->bytevector 0)$/;"	f	language:Scheme
unbox	/tmp/tags.scm	/^(define unbox 0)$/;"	f	language:Scheme
undefined-variable-warnings	/tmp/tags.scm	/^(define undefined-variable-warnings 0)$/;"	f	language:Scheme
undefined-violation?	/tmp/tags.scm	/^(define undefined-violation? 0)$/;"	f	language:Scheme
unget-char	/tmp/tags.scm	/^(define unget-char 0)$/;"	f	language:Scheme
unget-u8	/tmp/tags.scm	/^(define unget-u8 0)$/;"	f	language:Scheme
uninterned-symbol?	/tmp/tags.scm	/^(define uninterned-symbol? 0)$/;"	f	language:Scheme
unless	/tmp/tags.scm	/^(define unless 0)$/;"	f	language:Scheme
unlock-object	/tmp/tags.scm	/^(define unlock-object 0)$/;"	f	language:Scheme
unquote	/tmp/tags.scm	/^(define unquote 0)$/;"	f	language:Scheme
unquote-splicing	/tmp/tags.scm	/^(define unquote-splicing 0)$/;"	f	language:Scheme
unread-char	/tmp/tags.scm	/^(define unread-char 0)$/;"	f	language:Scheme
unsyntax	/tmp/tags.scm	/^(define unsyntax 0)$/;"	f	language:Scheme
unsyntax-splicing	/tmp/tags.scm	/^(define unsyntax-splicing 0)$/;"	f	language:Scheme
untrace	/tmp/tags.scm	/^(define untrace 0)$/;"	f	language:Scheme
utf-16-codec	/tmp/tags.scm	/^(define utf-16-codec 0)$/;"	f	language:Scheme
utf-16be-codec	/tmp/tags.scm	/^(define utf-16be-codec 0)$/;"	f	language:Scheme
utf-16le-codec	/tmp/tags.scm	/^(define utf-16le-codec 0)$/;"	f	language:Scheme
utf-8-codec	/tmp/tags.scm	/^(define utf-8-codec 0)$/;"	f	language:Scheme
utf16->string	/tmp/tags.scm	/^(define utf16->string 0)$/;"	f	language:Scheme
utf32->string	/tmp/tags.scm	/^(define utf32->string 0)$/;"	f	language:Scheme
utf8->string	/tmp/tags.scm	/^(define utf8->string 0)$/;"	f	language:Scheme
values	/tmp/tags.scm	/^(define values 0)$/;"	f	language:Scheme
vector	/tmp/tags.scm	/^(define vector 0)$/;"	f	language:Scheme
vector->immutable-vector	/tmp/tags.scm	/^(define vector->immutable-vector 0)$/;"	f	language:Scheme
vector->list	/tmp/tags.scm	/^(define vector->list 0)$/;"	f	language:Scheme
vector-cas!	/tmp/tags.scm	/^(define vector-cas! 0)$/;"	f	language:Scheme
vector-copy	/tmp/tags.scm	/^(define vector-copy 0)$/;"	f	language:Scheme
vector-fill!	/tmp/tags.scm	/^(define vector-fill! 0)$/;"	f	language:Scheme
vector-for-each	/tmp/tags.scm	/^(define vector-for-each 0)$/;"	f	language:Scheme
vector-length	/tmp/tags.scm	/^(define vector-length 0)$/;"	f	language:Scheme
vector-map	/tmp/tags.scm	/^(define vector-map 0)$/;"	f	language:Scheme
vector-ref	/tmp/tags.scm	/^(define vector-ref 0)$/;"	f	language:Scheme
vector-reverse!	/tmp/tags.scm	/^(define vector-reverse! 0)$/;"	f	language:Scheme
vector-set!	/tmp/tags.scm	/^(define vector-set! 0)$/;"	f	language:Scheme
vector-set-fixnum!	/tmp/tags.scm	/^(define vector-set-fixnum! 0)$/;"	f	language:Scheme
vector-sort	/tmp/tags.scm	/^(define vector-sort 0)$/;"	f	language:Scheme
vector-sort!	/tmp/tags.scm	/^(define vector-sort! 0)$/;"	f	language:Scheme
vector-swap!	/tmp/tags.scm	/^(define vector-swap! 0)$/;"	f	language:Scheme
vector?	/tmp/tags.scm	/^(define vector? 0)$/;"	f	language:Scheme
violation?	/tmp/tags.scm	/^(define violation? 0)$/;"	f	language:Scheme
virtual-register	/tmp/tags.scm	/^(define virtual-register 0)$/;"	f	language:Scheme
virtual-register-count	/tmp/tags.scm	/^(define virtual-register-count 0)$/;"	f	language:Scheme
visit	/tmp/tags.scm	/^(define visit 0)$/;"	f	language:Scheme
void	/tmp/tags.scm	/^(define void 0)$/;"	f	language:Scheme
waiter-prompt-and-read	/tmp/tags.scm	/^(define waiter-prompt-and-read 0)$/;"	f	language:Scheme
waiter-prompt-string	/tmp/tags.scm	/^(define waiter-prompt-string 0)$/;"	f	language:Scheme
waiter-write	/tmp/tags.scm	/^(define waiter-write 0)$/;"	f	language:Scheme
warning	/tmp/tags.scm	/^(define warning 0)$/;"	f	language:Scheme
warning?	/tmp/tags.scm	/^(define warning? 0)$/;"	f	language:Scheme
warningf	/tmp/tags.scm	/^(define warningf 0)$/;"	f	language:Scheme
weak-cons	/tmp/tags.scm	/^(define weak-cons 0)$/;"	f	language:Scheme
weak-pair?	/tmp/tags.scm	/^(define weak-pair? 0)$/;"	f	language:Scheme
when	/tmp/tags.scm	/^(define when 0)$/;"	f	language:Scheme
while	/tmp/tags.scm	/^(define while 0)$/;"	f	language:Scheme
who-condition?	/tmp/tags.scm	/^(define who-condition? 0)$/;"	f	language:Scheme
with-cost-center	/tmp/tags.scm	/^(define with-cost-center 0)$/;"	f	language:Scheme
with-exception-handler	/tmp/tags.scm	/^(define with-exception-handler 0)$/;"	f	language:Scheme
with-implicit	/tmp/tags.scm	/^(define with-implicit 0)$/;"	f	language:Scheme
with-input-from-file	/tmp/tags.scm	/^(define with-input-from-file 0)$/;"	f	language:Scheme
with-input-from-string	/tmp/tags.scm	/^(define with-input-from-string 0)$/;"	f	language:Scheme
with-interrupts-disabled	/tmp/tags.scm	/^(define with-interrupts-disabled 0)$/;"	f	language:Scheme
with-output-to-file	/tmp/tags.scm	/^(define with-output-to-file 0)$/;"	f	language:Scheme
with-output-to-string	/tmp/tags.scm	/^(define with-output-to-string 0)$/;"	f	language:Scheme
with-source-path	/tmp/tags.scm	/^(define with-source-path 0)$/;"	f	language:Scheme
with-syntax	/tmp/tags.scm	/^(define with-syntax 0)$/;"	f	language:Scheme
write	/tmp/tags.scm	/^(define write 0)$/;"	f	language:Scheme
write-char	/tmp/tags.scm	/^(define write-char 0)$/;"	f	language:Scheme
writeln	/tmp/tags.scm	/^(define writeln 0)$/;"	f	language:Scheme
zero?	/tmp/tags.scm	/^(define zero? 0)$/;"	f	language:Scheme
